{"version":3,"file":"admins.js","sources":["../../../../resources/js/modules/form/rules/compare.ts","../../../../resources/js/forms/user.ts","../../../../resources/js/tiers/admin/apps/Admins.vue","../../../../resources/js/tiers/admin/startup/Admins.ts"],"sourcesContent":["import { Rule } from \"../lib/rule\";\nimport { Field } from \"../lib/field\";\nimport { createPrivateField } from \"@/lib/private\";\n\ntype Validation<T> = (rule: T, comparedField: Field) => boolean;\n\nconst [comparedField, setComparedField] = createPrivateField<\n  CompareRule,\n  Field\n>();\n\nconst [validation, setValidation] = createPrivateField<\n  CompareRule,\n  Validation<CompareRule>\n>();\n\nexport class CompareRule extends Rule {\n  init() {\n    super.init();\n\n    setValidation(this, () => {\n      return (rule: this, comparedField: Field) =>\n        rule.field.value === comparedField.value;\n    });\n  }\n\n  compareWith(field: Field): this {\n    setComparedField(this, field);\n    return this;\n  }\n\n  validation(callback: (rule: this, comparedField: Field) => boolean) {\n    setValidation(this, () => callback);\n  }\n\n  get defaultMessage(): string {\n    return `{attribute} is not matched ${comparedField(this).label}`;\n  }\n  validate(): Promise<boolean> {\n    return new Promise((resolve) => {\n      resolve(!this.field.value || validation(this)(this, comparedField(this)));\n    });\n  }\n}\n","import { translate } from \"@/lib/metadata\"\nimport { Field } from \"@/modules/form/lib/field\"\nimport { Model } from \"@/modules/form/lib/model\"\nimport { CompareRule } from \"@/modules/form/rules/compare\"\nimport { RequiredRule } from \"@/modules/form/rules/required\"\nimport { StringRule } from \"@/modules/form/rules/string\"\n\nexport class User extends Model {\n\tget id(): Field {\n\t\treturn this.field(\"id\", translate(\"ID\"), this.initData?.id ?? \"\")\n\t}\n\n\tget username(): Field {\n\t\treturn this.field(\n\t\t\t\"username\",\n\t\t\ttranslate(\"Username\"),\n\t\t\tthis.initData?.username ?? \"\",\n\t\t)\n\t}\n\n\tget password(): Field {\n\t\treturn this.field(\"password\", translate(\"Password\"), \"\")\n\t}\n\n\tget confirmPassword(): Field {\n\t\treturn this.field(\"confirm_password\", translate(\"Confirm Password\"), \"\")\n\t}\n\n\tget status(): Field {\n\t\treturn this.field(\n\t\t\t\"status\",\n\t\t\ttranslate(\"Status\"),\n\t\t\tthis.initData?.status ?? \"enabled\",\n\t\t)\n\t}\n\n\tget rules(): any[] {\n\t\treturn [\n\t\t\t[\n\t\t\t\t[this.username, this.password, this.confirmPassword],\n\t\t\t\tStringRule,\n\t\t\t],\n\t\t\t[[this.username], RequiredRule],\n\t\t\t[\n\t\t\t\t[this.password, this.confirmPassword],\n\t\t\t\tRequiredRule,\n\t\t\t\t(required: RequiredRule) => required.enabled(() => this.isNewRecord),\n\t\t\t],\n\t\t\t[\n\t\t\t\t[this.confirmPassword],\n\t\t\t\tCompareRule,\n\t\t\t\t(compare: CompareRule) => compare.compareWith(this.password),\n\t\t\t],\n\t\t]\n\t}\n}\n","<script setup lang=\"ts\">\nimport { User } from \"@/forms/user\";\nimport { api } from \"@/lib/api\";\nimport { metadata, translate } from \"@/lib/metadata\";\nimport Button from \"@/modules/bootstrap/components/Button.vue\";\nimport Crud from \"@/modules/crud/components/Crud.vue\";\nimport { createFields, fetch } from \"@/modules/crud/lib/crud\";\nimport { Field } from \"@/modules/form/lib/field\";\nimport { Model } from \"@/modules/form/lib/model\";\nimport { RequiredRule } from \"@/modules/form/rules/required\";\nimport { StringRule } from \"@/modules/form/rules/string\";\nimport { DataList } from \"@/modules/form/types\";\nimport Icon from \"@/components/Icon.vue\";\nimport { mdiPencil, mdiPlusThick } from \"@mdi/js\";\nimport ModalForm from \"@/modules/form/components/helper/ModalForm.vue\";\nimport { ref } from \"vue\";\nimport StringInput from \"@/modules/form/components/StringInput.vue\";\nimport RadioInput from \"@/modules/form/components/RadioInput.vue\";\nimport { FieldType } from \"@/modules/crud/lib/crud\";\nimport { successToast } from '@/modules/bootstrap/lib/toast';\n\ntype Item = {\n  id?: number;\n  name?: string;\n  username?: string;\n  user: {\n    id?: number;\n    username?: string;\n    status?: \"enabled\" | \"disabled\" | \"pending\";\n  };\n};\n\nconst fields = createFields(\n  {\n    type: FieldType.Number,\n    name: \"id\",\n    label: \"ID\",\n    fitable: true,\n    sortable: true,\n    searchable: true,\n  },\n  {\n    type: FieldType.String,\n    name: \"name\",\n    label: \"Name\",\n    fitable: false,\n    sortable: true,\n    searchable: true,\n  },\n  {\n    type: FieldType.String,\n    name: \"username\",\n    label: \"Username\",\n    fitable: true,\n    sortable: true,\n    searchable: true,\n  },\n  {\n    type: FieldType.String,\n    name: \"status\",\n    label: \"Status\",\n    fitable: true,\n    sortable: true,\n    searchable: true,\n  }\n);\n\nclass Admin extends Model {\n  get id(): Field {\n    return this.field(\"id\", translate(\"ID\"), this.initData?.id ?? \"\");\n  }\n\n  get name(): Field {\n    return this.field(\"name\", translate(\"Name\"), this.initData?.name ?? \"\");\n  }\n\n  get user(): User {\n    return this.hasOne(\"user\", (initData: DataList) => new User(initData));\n  }\n\n  get rules(): any[] {\n    return [\n      [[this.name], StringRule],\n      [[this.name], RequiredRule],\n    ];\n  }\n}\n\nconst crud = ref<any>(null);\nconst modal = ref<any>(null);\n\nconst add = () => {\n  modal.value?.open?.();\n};\n\nconst edit = (data: Item) => {\n  modal.value?.open?.(data);\n};\n\nconst save = (model: Admin, done: () => void) => {\n  let request;\n  if (model.isNewRecord) {\n    request = api().post(\"/admins\", model.data);\n  } else {\n    request = api().put(`/admins/${model.id.value}`, model.data);\n  }\n  request.then(() => {\n    successToast(`${model.name.value}`, `Admin Saved Successfully`);\n    crud.value?.refresh();\n    done();\n  });\n};\n</script>\n<template>\n  <Crud ref=\"crud\" :fields=\"fields\" :fetch=\"fetch < Item > ('/admins', 'user')\">\n    <template #usernameValue=\"{ item }\">\n      {{ item.user?.username ?? \"--\" }}\n    </template>\n    <template #statusValue=\"{ item }\">\n      <span :class=\"{'text-success': item.user?.status === 'enabled'}\">{{ item.user?.status }}</span>\n    </template>\n    <template #actions=\"{ item }\">\n      <Button color=\"info\" size=\"sm\" @click=\"edit(item)\">\n        <Icon :path=\"mdiPencil\" color=\"light\" />\n        <span class=\"text-light\">Edit</span>\n      </Button>\n    </template>\n    <template #topActions>\n      <Button color=\"primary\" @click=\"add\">\n        <Icon :path=\"mdiPlusThick\" color=\"light\" /> Add New Admin\n      </Button>\n    </template>\n  </Crud>\n  <ModalForm\n    name=\"Admin\"\n    :model-class=\"Admin\"\n    size=\"lg\"\n    ref=\"modal\"\n    @save=\"save\"\n  >\n    <template #=\"{ model }\">\n      <div class=\"h6 mb-3\">User Information</div>\n      <div class=\"mb-4\">\n        <StringInput :field=\"model.name\" />\n      </div>\n      <div class=\"h6 mb-3\">Login Authentication</div>\n      <div class=\"mb-4\">\n        <StringInput :field=\"model.user.username\" />\n      </div>\n      <div class=\"row mb-4\">\n        <div class=\"col-md-6\">\n          <StringInput :field=\"model.user.password\" type=\"password\" />\n        </div>\n        <div class=\"col-md-6\">\n          <StringInput :field=\"model.user.confirmPassword\" type=\"password\" />\n        </div>\n      </div>\n      <div>\n        <RadioInput\n          :field=\"model.user.status\"\n          :options=\"[\n            {\n              value: 'enabled',\n              label: 'Enabled',\n            },\n            {\n              value: 'disabled',\n              label: 'Disabled',\n            },\n            {\n              value: 'pending',\n              label: 'Pending',\n            },\n          ]\"\n          inline\n        />\n      </div>\n    </template>\n  </ModalForm>\n</template>\n","/**\n * Admins.vue Startup File\n *\n * @project palacegroup1\n * @company Codendot <https://codendot.com>\n * @author Jawdat Sobh <jawdat@codendot.com>\n * @since Saturday, September 16, 2023 at 06:08 PM GMT+3\n *\n */\n\nimport { createApp } from \"@/lib/app\"\nimport AppComponent from \"../apps/Admins.vue\"\nimport bootstrap from \"../bootstrap/Admins\"\n\nconst app = createApp(\"admins\", AppComponent)\nbootstrap(app)\napp.mount()\n"],"names":["comparedField","setComparedField","createPrivateField","validation","setValidation","CompareRule","Rule","rule","field","callback","resolve","User","Model","translate","_a","StringRule","RequiredRule","required","compare","fields","createFields","FieldType","Admin","initData","crud","ref","modal","add","_b","edit","data","save","model","done","request","api","successToast","app","createApp","AppComponent"],"mappings":"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"}