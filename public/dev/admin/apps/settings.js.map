{"version":3,"file":"settings.js","sources":["../../../../resources/js/modules/bootstrap/components/ListGroup.vue","../../../../resources/js/modules/bootstrap/components/ListGroupItem.vue","../../../../resources/js/tiers/admin/components/SettingField.vue","../../../../resources/js/tiers/admin/apps/Settings.vue","../../../../resources/js/tiers/admin/startup/Settings.ts"],"sourcesContent":["<script setup lang=\"ts\">\nimport { computed } from \"vue\";\n\ndefineOptions({\n  inheritAttrs: false,\n});\n\ntype Props = {\n  type?: \"items\" | \"orders\" | \"actions\";\n  flush?: boolean;\n  horizontal?: boolean;\n};\nconst { type = \"items\", flush = false, horizontal = false } = defineProps<Props>();\n\nconst tag = computed(() =>\n  type === \"actions\" ? \"div\" : type === \"orders\" ? \"ol\" : \"ul\"\n);\n</script>\n<template>\n  <component\n    :is=\"tag\"\n    class=\"list-group\"\n    :class=\"{\n      'list-group-numbered': tag === 'ol',\n      'list-group-flush': flush,\n      'list-group-horizontal': horizontal,\n    }\"\n    v-bind=\"$attrs\"\n  >\n    <slot></slot>\n  </component>\n</template>\n","<script setup lang=\"ts\">\nimport { ListGroupColor } from \"../types\";\nimport { getCurrentInstance, computed } from 'vue';\n\ndefineOptions({\n  inheritAttrs: false,\n});\n\ntype Props = {\n  active?: boolean;\n  disabled?: boolean;\n  color?: ListGroupColor;\n};\nconst {\n  active = false,\n  disabled = false,\n  color = \"light\",\n} = defineProps<Props>();\n\nconst instance = getCurrentInstance();\nconst parentTag = computed(\n  () => instance?.parent?.props?.type?.toString?.()?.toLowerCase?.() ?? null\n);\n\nconst clickable = computed(() => parentTag.value === 'actions')\n\n</script>\n<template>\n  <component\n    :is=\"clickable ? 'a' : 'li'\"\n    :href=\"clickable ? '#' : null\"\n    class=\"list-group-item\"\n    :class=\"{\n      'list-group-item-action': clickable,\n      [`list-group-item-${color}`]: true,\n      active,\n      disabled,\n    }\"\n    :aria-current=\"active ? 'true' : undefined\"\n    :aria-disabled=\"disabled ? 'true' : undefined\"\n    @click.prevent\n    v-bind=\"$attrs\"\n  >\n    <slot></slot>\n  </component>\n</template>\n","<script setup lang=\"ts\">\nimport { SettingsCategory, SettingsItem } from \"@/lib/metadata\";\nimport AttributesInput from \"@/modules/form/components/AttributesInput.vue\";\nimport { createModel } from \"@/modules/form/hooks/model\";\nimport { Field } from \"@/modules/form/lib/field\";\nimport { Model } from \"@/modules/form/lib/model\";\nimport AttrsInput from \"@/modules/form/components/AttrsInput.vue\";\nimport Button from \"@/modules/bootstrap/components/Button.vue\";\nimport { ref, onUnmounted } from \"vue\";\nimport Icon from \"@/components/Icon.vue\";\nimport { mdiFloppy } from \"@mdi/js\";\nimport { api } from \"@/lib/api\";\nimport { successToast } from \"@/modules/bootstrap/lib/toast\";\n\ntype Props = {\n  item: SettingsItem;\n  category: SettingsCategory;\n  value?: string;\n};\n\nconst { item, category, value = undefined } = defineProps<Props>();\n\nconst btn = ref<any>(null);\n\nclass Setting extends Model {\n  get item(): Field {\n    return this.field(item.key ?? `${category.name}.${item.name}`, item.label, value ?? item.defaultValue);\n  }\n\n  get rules(): any[] {\n    return [];\n  }\n}\n\nconst [model, newModel, destroyModel] = createModel(Setting);\n\nconst save = async () => {\n  const valid = await model.value?.validate();\n  if (valid) {\n    btn.value?.start?.();\n    api()\n      .post(\"/settings/system\", {\n        name: model.value?.item.name,\n        value: model.value?.item.value,\n      })\n      .then(() => {\n        successToast(item.label, \"Saved Successfully\");\n      })\n      .finally(() => {\n        btn.value?.stop?.();\n      });\n  }\n};\n\nnewModel();\n\nonUnmounted(() => {\n  destroyModel();\n});\n</script>\n<template>\n  <form @submit.prevent=\"save\">\n    <div class=\"mb-3\">\n      <AttrsInput\n        v-if=\"model\"\n        :type=\"item.type\"\n        :field=\"model.item\"\n        :attributes=\"item.attributes\"\n        :props=\"item.props\"\n        :icon=\"item.icon\"\n      >\n        <template #buttonAfter=\"{ field }\">\n          <Button type=\"submit\" ref=\"btn\" color=\"secondary\" outline>\n            <Icon :path=\"mdiFloppy\" />Save\n          </Button>\n        </template>\n      </AttrsInput>\n    </div>\n  </form>\n</template>\n","<script setup lang=\"ts\">\nimport { Settings, SettingsCategory, settings } from \"@/lib/metadata\";\nimport ListGroup from \"@/modules/bootstrap/components/ListGroup.vue\";\nimport ListGroupItem from \"@/modules/bootstrap/components/ListGroupItem.vue\";\nimport { ref, computed, onMounted } from \"vue\";\nimport SettingField from \"../components/SettingField.vue\";\nimport { api } from \"@/lib/api\";\nimport ContentLoader from \"@/components/ContentLoader.vue\";\n\nconst settingsWithKey = settings()?.map?.((category) => {\n  category.items = category.items.map((item) => {\n    return { ...item, key: `${category.name}.${item.name}` };\n  });\n  return category;\n}) as Settings;\n\nconst setting = ref<Settings>(settingsWithKey);\nconst selected = ref<string | undefined>(setting.value?.at(0)?.name);\nconst list = ref<any>(null);\nconst loader = ref<any>(null);\n\nconst select = (category: SettingsCategory) => {\n  selected.value = category.name;\n};\n\nconst category = computed(() =>\n  setting.value?.find((category) => category.name === selected.value)\n);\n\nconst fetch = () => {\n  loader.value?.start?.();\n  api()\n    .get(\"/settings/system\")\n    .then(({ data }: any) => {\n      list.value = data.reduce((items, item) => {\n        items[item.name] = item.value;\n        return items;\n      }, {});\n      loadNotConfigured();\n    })\n    .finally(() => {\n      loader.value?.stop?.();\n    });\n};\n\nconst loadNotConfigured = () => {\n  if (!Object.is(list.value, null) && Array.isArray(setting.value)) {\n    const configured: Array<string> = [];\n    setting.value?.forEach((category) => {\n      category.items.forEach((item) => {\n        configured.push(`${category.name}.${item.name}`);\n      });\n    });\n    const items = Object.keys(list.value)\n      .filter((name: string) => !configured.includes(name))\n      .map((name: string) => {\n        return {\n          type: \"string\",\n          key: name,\n          name,\n          label: name,\n          defaultValue: list.value[name],\n        };\n      });\n    setting.value.push({\n      name: \"other\",\n      label: \"Others\",\n      items,\n    });\n  }\n};\n\nonMounted(() => {\n  fetch();\n});\n</script>\n<template>\n  <pre>{{ typeof list }}</pre>\n  <ContentLoader v-if=\"Array.isArray(setting)\" ref=\"loader\" title=\"Settings\">\n    <div class=\"row\">\n      <div class=\"col-md-3\">\n        <ListGroup type=\"actions\">\n          <template v-for=\"category in setting\" :key=\"category.name\">\n            <ListGroupItem\n              :active=\"selected === category.name\"\n              @click=\"select(category)\"\n            >\n              {{ category.label }}\n            </ListGroupItem>\n          </template>\n        </ListGroup>\n      </div>\n      <div v-if=\"category\" class=\"col-md-9\">\n        <div class=\"display-6 mb-3\">{{ category.label }}</div>\n        <template\n          v-for=\"item in category.items\"\n          :key=\"`${category.name}-${item.name}`\"\n        >\n          <SettingField\n            v-if=\"!Object.is(list, null)\"\n            :item=\"item\"\n            :category=\"category\"\n            :value=\"list[`${item.key}`]\"\n          />\n        </template>\n      </div>\n    </div>\n  </ContentLoader>\n  <div v-else class=\"p-3 text-muted\">There are no settings</div>\n</template>\n","/**\n * Settings.vue Startup File\n *\n * @project palacegroup1\n * @company Codendot <https://codendot.com>\n * @author Jawdat Sobh <jawdat@codendot.com>\n * @since Saturday, September 16, 2023 at 06:08 PM GMT+3\n *\n */\n\nimport { createApp } from \"@/lib/app\"\nimport AppComponent from \"../apps/Settings.vue\"\nimport bootstrap from \"../bootstrap/Settings\"\n\nconst app = createApp(\"settings\", AppComponent)\nbootstrap(app)\napp.mount()\n"],"names":["tag","computed","__props","instance","getCurrentInstance","parentTag","_f","_e","_d","_c","_b","_a","clickable","btn","ref","Setting","Model","model","newModel","destroyModel","createModel","save","api","successToast","onUnmounted","settingsWithKey","settings","category","item","setting","selected","list","loader","select","fetch","data","items","loadNotConfigured","configured","name","onMounted","app","createApp","AppComponent"],"mappings":"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"}