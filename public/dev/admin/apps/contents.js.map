{"version":3,"file":"contents.js","sources":["../../../../resources/js/modules/cms/forms/attrs.ts","../../../../resources/js/modules/cms/forms/content-local.ts","../../../../resources/js/modules/cms/forms/content.ts","../../../../resources/js/modules/bootstrap/components/Navs.vue","../../../../resources/js/modules/bootstrap/components/TabContent.vue","../../../../resources/js/components/Wait.vue","../../../../resources/js/modules/cms/lib/cms.ts","../../../../resources/js/modules/cms/forms/cateory-local.ts","../../../../resources/js/modules/cms/forms/category.ts","../../../../resources/js/modules/tree/Node.vue","../../../../resources/js/modules/tree/Tree.vue","../../../../resources/js/directives/click-outside.ts","../../../../resources/js/components/ContextMenu.vue","../../../../resources/js/modules/bootstrap/directives/tooltip.ts","../../../../resources/js/components/Ref.vue","../../../../resources/js/modules/friendlyurl/components/FriendlyUrlModal.vue","../../../../resources/js/modules/seo/components/SeoModal.vue","../../../../resources/js/modules/cms/components/Categories.vue","../../../../resources/js/modules/cms/components/Contents.vue","../../../../resources/js/tiers/admin/startup/Contents.ts"],"sourcesContent":["import { createPrivateField } from '@/lib/private';\nimport { Model, DataList } from '@/modules/form/lib/model';\nimport { cms } from '@/lib/metadata';\n\nconst [fields, setFields] = createPrivateField<Attrs, any>({})\n\nexport class Attrs extends Model {\n\tstatic generate(\n\t\ttype: string,\n\t\tcolumn: string | number,\n\t\tinitData: DataList = {},\n        section: string = \"content\"\n    ) {\n        let typeName = type\n        let types = type.split(/\\[(.*)\\](.*)/).filter((element: any) => element)\n        if (types.length > 1) {\n            typeName = types[1]\n        }\n\t\tconst fieldsList =\n\t\t\tcms()?.[section][typeName]?.attrs?.find(\n\t\t\t\t(row) => `${row.column}` === `${column}`,\n\t\t\t)?.fields ?? []\n\t\tconst model = new Attrs(initData, (self: Attrs) => {\n\t\t\tsetFields(self, fieldsList)\n\t\t})\n\t\treturn model\n\t}\n\n\tget attrs() {\n\t\treturn fields(this)\n\t}\n\n\tpublic beforeCreate() {\n\t\tconst fieldsList = fields(this)\n\t\tfieldsList.forEach((data: any) => {\n\t\t\tthis.createField(\n\t\t\t\tdata.name,\n\t\t\t\tdata.label,\n\t\t\t\tthis.initData?.[data.name] ?? data.defaultValue ?? \"\",\n\t\t\t)\n\t\t\tconst field = this[data.name]\n\t\t\tthis.setField(field)\n\t\t})\n\t}\n\n\tget rules(): any[] {\n\t\treturn []\n\t}\n}\n","import { Model } from \"@/modules/form/lib/model\";\nimport { Attrs } from \"./attrs\";\nimport { Field } from \"@/modules/form/lib/field\";\nimport { DataList } from \"@/modules/form/types\";\nimport { StringRule } from \"@/modules/form/rules/string\";\nimport { RequiredRule } from \"@/modules/form/rules/required\";\n\nexport class ContentLocal extends Model {\n  type: string = \"default\";\n\n  get id(): Field {\n    return this.field(\"id\", \"ID\", this.initData?.id ?? null);\n  }\n\n  get contentId(): Field {\n    return this.field(\n      \"content_id\",\n      \"Content ID\",\n      this.initData?.content_id ?? null\n    );\n  }\n\n  get language(): Field {\n    return this.field(\"language\", \"Language\", this.initData?.language ?? \"en\");\n  }\n\n  get title(): Field {\n    return this.field(\"title\", \"Title\", this.initData?.title ?? \"\");\n  }\n\n  get excerpt(): Field {\n    return this.field(\"excerpt\", \"Excerpt\", this.initData?.excerpt ?? \"\");\n  }\n\n  get blocks(): Field {\n    return this.field(\"blocks\", \"Text\", this.initData?.blocks ?? {});\n  }\n\n  get attrs(): Attrs {\n    return this.hasOne(\"attrs\", (initData: DataList) => {\n      return Attrs.generate(this.type, \"local\", initData);\n    });\n  }\n\n  get rules(): any[] {\n    return [\n      [[this.title], StringRule],\n      [[this.title], RequiredRule],\n    ];\n  }\n}\n","import { ContentLocal } from \"./content-local\"\nimport { Attrs } from \"./attrs\"\nimport { Model } from \"@/modules/form/lib/model\"\nimport { Field } from \"@/modules/form/lib/field\"\nimport { DataList } from \"@/modules/form/types\"\n\nexport class Content extends Model {\n\tget id(): Field {\n\t\treturn this.field(\"id\", \"ID\", this.initData?.id ?? null)\n\t}\n\n\tget type(): Field {\n\t\treturn this.field(\"type\", \"Type\", this.initData?.type ?? \"default\")\n\t}\n\n\tget status(): Field {\n\t\treturn this.field(\"status\", \"Status\", this.initData?.status ?? \"active\")\n\t}\n\n\tget position(): Field {\n\t\treturn this.field(\"position\", \"Position\", this.initData?.position ?? \"0\")\n\t}\n\n\tget categories(): Field {\n\t\treturn this.field(\n\t\t\t\"categories\",\n\t\t\t\"Categories\",\n\t\t\tthis.initData?.categories ?? [],\n\t\t)\n\t}\n\n\tget attrs1(): Attrs {\n\t\treturn this.hasOne(\"attrs1\", (initData: DataList) => {\n\t\t\treturn Attrs.generate(\n\t\t\t\tthis.initData?.type ?? \"default\",\n\t\t\t\t\"1\",\n\t\t\t\tthis.initData.attrs,\n\t\t\t)\n\t\t})\n\t}\n\n\tget attrs2(): Attrs {\n\t\treturn this.hasOne(\"attrs2\", (initData: DataList) => {\n\t\t\treturn Attrs.generate(\n\t\t\t\tthis.initData?.type ?? \"default\",\n\t\t\t\t\"2\",\n\t\t\t\tthis.initData.attrs,\n\t\t\t)\n\t\t})\n\t}\n\n\tget attrs3(): Attrs {\n\t\treturn this.hasOne(\"attrs3\", (initData: DataList) => {\n\t\t\treturn Attrs.generate(\n\t\t\t\tthis.initData?.type ?? \"default\",\n\t\t\t\t\"3\",\n\t\t\t\tthis.initData.attrs,\n\t\t\t)\n\t\t})\n\t}\n\n\tget locals(): ContentLocal[] {\n\t\treturn this.hasLocals(\n\t\t\t(initData: DataList) =>\n\t\t\t\tnew ContentLocal(initData, (self: any) => {\n\t\t\t\t\tself.type = this.initData.type ?? \"default\"\n\t\t\t\t}),\n\t\t)\n\t}\n\n\tget rules(): any[] {\n\t\treturn []\n\t}\n\n\tcontrolData(list: { [name: string]: any }): { [name: string]: any } {\n\t\tlist.attrs = { ...list.attrs1, ...list.attrs2, ...list.attrs3 }\n\t\tdelete list.attrs1\n\t\tdelete list.attrs2\n\t\tdelete list.attrs3\n\t\treturn list\n\t}\n}\n","<script setup lang=\"ts\" generic=\"T extends string = string\">\nimport { ref } from \"vue\";\nimport Icon from '@/components/Icon.vue';\n\ntype Tab = {\n  name: T;\n  label: string;\n  disabled?: boolean;\n  icon?: string | false;\n};\n\ntype Props = {\n  type?: \"tabs\" | \"pills\" | \"nav\";\n  tabs: Tab[];\n  alignment?: \"start\" | \"center\" | \"end\";\n  vertical?: boolean;\n  fill?: boolean;\n  justified?: boolean;\n  responsive?: boolean;\n};\n\nconst {\n  type = \"nav\",\n  tabs,\n  alignment = \"start\",\n  vertical = false,\n  fill = false,\n  justified = false,\n  responsive = false,\n} = defineProps<Props>();\n\ntype Slots = {\n  [Property in T as `${Property}-tab`]: (props: { tab: Tab }) => void;\n};\ndefineSlots<Slots>();\n\nconst active = ref<string>(tabs[0]?.name ?? \"\");\n\ntype Emits = {\n  select: [tab: Tab];\n};\nconst emit = defineEmits<Emits>();\n\nconst select = (tab: Tab) => {\n  active.value = tab.name;\n  emit(\"select\", tab);\n};\n</script>\n<template>\n  <ul\n    class=\"nav\"\n    :class=\"{\n      'nav-tabs': type === 'tabs',\n      'nav-pills': type === 'pills',\n      'nav-fill': fill,\n      'nav-justified': justified,\n      'flex-column': vertical,\n      'justify-content-start': alignment === 'start',\n      'justify-content-center': alignment === 'center',\n      'justify-content-end': alignment === 'end',\n      'flex-sm-row': responsive,\n    }\"\n    role=\"tablist\"\n  >\n    <template v-for=\"(tab, i) in tabs\" :key=\"i\">\n      <li\n        class=\"nav-item\"\n        :class=\"{\n          'flex-sm-fill': responsive,\n          'text-sm-center': responsive,\n        }\"\n      >\n        <a\n          href=\"#\"\n          class=\"nav-link\"\n          :class=\"{\n            disabled: tab.disabled ?? false,\n            active: active === tab.name,\n          }\"\n          :id=\"`tab-${tab.name}`\"\n          aria-current=\"page\"\n          @click.prevent=\"select(tab)\"\n          :disabled=\"tab.disabled\"\n        >\n          <slot :name=\"`${tab.name}-tab`\" :tab=\"tab\">\n            <template v-if=\"tab.icon\">\n              <Icon :path=\"tab.icon\" /> &nbsp;</template\n            ><span>{{ tab.label }}</span>\n          </slot>\n        </a>\n      </li>\n    </template>\n  </ul>\n</template>\n","<script setup lang=\"ts\" generic=\"T extends string = string\">\nimport { ref } from 'vue';\nimport Navs from './Navs.vue';\n\ntype Tab = {\n    name: T\n    label: string\n    disabled?: boolean\n    icon?: string | false\n}\n\ntype Props = {\n    type?: 'tabs' | 'pills' | 'nav'\n    tabs: Tab[],\n    alignment?: 'start' | 'center' | 'end'\n    vertical?: boolean\n    fill?: boolean\n    justified?: boolean\n    responsive?: boolean\n    disableNavs?: boolean\n}\n\nconst { type = \"nav\", tabs, alignment = \"start\", vertical = false, fill = false, justified = false, responsive = false, disableNavs = false } = defineProps<Props>()\n\ntype Slots = {\n  [Property in T]: (props: { tab: Tab }) => void;\n};\ndefineSlots<Slots>();\n\nconst active = ref<string>(tabs[0]?.name ?? '')\n\nconst select = (tab: Tab) => {\n    active.value = tab.name\n}\n\ndefineExpose({ select })\n</script>\n<template>\n    <template v-if=\"!disableNavs\">\n        <Navs\n            :type=\"type\"\n            :tabs=\"tabs\"\n            :alignment=\"alignment\"\n            :vertical=\"vertical\"\n            :fill=\"fill\"\n            :justified=\"justified\"\n            :responsive=\"responsive\"\n            @select=\"select\"\n        ></Navs>\n    </template>\n    <div class=\"tab-content\">\n        <template\n            v-for=\"(tab, i) in tabs\"\n            :key=\"i\"\n        >\n            <div\n                class=\"tab-pane fade\"\n                :class=\"{ show: active === tab.name, active: active === tab.name }\"\n                role=\"tabpanel\"\n                :aria-labelledby=\"`tab-${tab.name}`\"\n                :tabindex=\"i\"\n            >\n                <slot\n                    :name=\"tab.name\"\n                    :tab=\"tab\"\n                ></slot>\n            </div>\n        </template>\n    </div>\n</template>\n<style scoped lang=\"scss\">\n.tab-content {\n    min-height: 100%;\n    display: flex;\n    flex-direction: row;\n\n    .tab-pane {\n        min-height: 100%;\n        flex: auto;\n    }\n}\n</style>\n","<script setup lang=\"ts\">\nimport { ref, onUnmounted } from 'vue';\n\ntype Props = {\n    time: number\n}\n\nconst { time } = defineProps<Props>()\n\nconst active = ref<boolean>(false)\n\nconst timer = setTimeout(() => {\n    active.value = true\n}, time)\n\nonUnmounted(() => {\n    clearTimeout(timer)\n})\n</script>\n<template>\n    <template v-if=\"active\">\n        <slot></slot>\n    </template>\n</template>\n","import { cms } from '@/lib/metadata';\n\nexport const splitType = (type): {id: null | number, name: string} => {\n\tlet name: string = type\n    let id:null | number = null\n\tlet types = type.split(/\\[(.*)\\](.*)/).filter((element: any) => element)\n\tif (types.length > 1) {\n\t\tid = +types[0]\n\t\tname = types[1]\n    }\n\n    return { id, name }\n}\n\nexport function maxContents (type) {\n    const { name } = splitType(type)\n    let hasMax = true\n    Object.entries(cms()?.content).forEach(([key, config]: any) => {\n        const names = key.split('.');\n        if (names[0] === name) {\n            hasMax = hasMax && (cms()?.content?.[key]?.max > 0)\n        }\n    })\n    return hasMax\n}\n","import { Model } from \"@/modules/form/lib/model\";\nimport { Attrs } from \"./attrs\";\nimport { Field } from \"@/modules/form/lib/field\";\nimport { DataList } from \"@/modules/form/types\";\nimport { StringRule } from \"@/modules/form/rules/string\";\nimport { RequiredRule } from \"@/modules/form/rules/required\";\n\nexport class CategoryLocal extends Model {\n  type: string = \"default\";\n\n  get id(): Field {\n    return this.field(\"id\", \"ID\", this.initData?.id ?? null);\n  }\n\n  get categoryId(): Field {\n    return this.field(\n      \"category_id\",\n      \"Category ID\",\n      this.initData?.category_id ?? null\n    );\n  }\n\n  get language(): Field {\n    return this.field(\"language\", \"Language\", this.initData?.language ?? \"en\");\n  }\n\n  get title(): Field {\n    return this.field(\"title\", \"Title\", this.initData?.title ?? \"\");\n  }\n\n  get excerpt(): Field {\n    return this.field(\"excerpt\", \"Excerpt\", this.initData?.excerpt ?? \"\");\n  }\n\n  get attrs(): Attrs {\n    return this.hasOne(\"attrs\", (initData: DataList) => {\n      return Attrs.generate(this.type, \"local\", initData, \"category\");\n    });\n  }\n\n  get rules(): any[] {\n    return [\n      [[this.title], StringRule],\n      [[this.title], RequiredRule],\n    ];\n  }\n}\n","import { Model } from \"@/modules/form/lib/model\";\nimport { Attrs } from \"./attrs\";\nimport { Field } from \"@/modules/form/lib/field\";\nimport { CategoryLocal } from \"./cateory-local\";\nimport { DataList } from \"@/modules/form/types\";\n\nexport class Category extends Model {\n  get id(): Field {\n    return this.field(\"id\", \"ID\", this.initData?.id ?? null);\n  }\n\n  get type(): Field {\n    return this.field(\"type\", \"Type\", this.initData?.type ?? \"default\");\n  }\n\n  get parentId(): Field {\n    return this.field(\n      \"parent_id\",\n      \"Parent ID\",\n      this.initData?.parent_id ?? null\n    );\n  }\n\n  get path(): Field {\n    return this.field(\"path\", \"Path\", this.initData?.path ?? null);\n  }\n\n  get status(): Field {\n    return this.field(\"status\", \"Status\", this.initData?.status ?? \"active\");\n  }\n\n  get position(): Field {\n    return this.field(\"position\", \"Position\", this.initData?.position ?? \"0\");\n  }\n\n  get locals(): CategoryLocal[] {\n    return this.hasLocals(\n      (initData: DataList) =>\n        new CategoryLocal(initData, (self: any) => {\n          self.type = this.initData.type ?? \"default\";\n        })\n    );\n  }\n\n  get attrs(): Attrs {\n    return this.hasOne(\"attrs\", (initData: DataList) => {\n      return Attrs.generate(\n        this.initData?.type ?? \"default\",\n        \"settings\",\n        this.initData.attrs,\n        \"category\"\n      );\n    });\n  }\n\n  get rules(): any[] {\n    return [];\n  }\n}\n","<script setup lang=\"ts\">\nimport { inject, ref, nextTick } from \"vue\";\nimport Nodes from \"./Nodes.vue\";\nimport ContentLoader from \"@/components/ContentLoader.vue\";\nimport Icon from '@/components/Icon.vue';\nimport { mdiMinusThick, mdiPlusThick } from \"@mdi/js\";\n\ntype Props = {\n  model: any;\n  index: number;\n  refresh: () => void;\n  level?: number;\n  defaultMsg?: boolean;\n};\n\nconst {\n  model,\n  index,\n  refresh,\n  level = 0,\n  defaultMsg = false,\n} = defineProps<Props>();\n\ntype Slots = {\n  default: (props: {\n    model: any;\n    level: number;\n    index: number;\n    refresh: () => void;\n  }) => void;\n};\ndefineSlots<Slots>();\n\nconst expanded = ref<boolean>(false);\nconst children = ref<any>([]);\nconst loader = ref<any>(null);\n\nconst toggle = () => {\n  expanded.value = !expanded.value;\n  nextTick(() => {\n    if (expanded.value && !children.length) {\n      fetch();\n    }\n  });\n};\n\nconst dataFactory: any = inject(\"dataFactory\");\n\nconst fetch = () => {\n  loader.value?.start();\n  dataFactory({ parent: model, level: level + 1, index }, (data: any) => {\n    children.value = data;\n    loader.value?.stop();\n  });\n};\n\nconst doRefresh = () => {\n  children.value = [];\n  nextTick(() => {\n    fetch();\n  });\n};\n</script>\n<template>\n  <div class=\"node\" :class=\"{ expanded }\">\n    <div class=\"node-header\">\n      <div class=\"prefix\">\n        <div class=\"toggle-icon\" @click.stop=\"toggle\">\n          <Icon :path=\"expanded?mdiMinusThick:mdiPlusThick\" />\n        </div>\n      </div>\n      <div class=\"title\">\n        <slot\n          name=\"default\"\n          :model=\"model\"\n          :level=\"level\"\n          :index=\"index\"\n          :refresh=\"refresh\"\n        ></slot>\n      </div>\n    </div>\n    <div v-if=\"expanded\" class=\"node-body\">\n      <ContentLoader ref=\"loader\" title=\"Data\" class=\"ps-4\">\n        <template v-if=\"children.length > 0\">\n          <Nodes\n            :parent=\"model\"\n            :children=\"children\"\n            :level=\"level + 1\"\n            :default-msg=\"defaultMsg\"\n            :refresh=\"doRefresh\"\n          >\n            <template #=\"{ model, level, index, refresh }\">\n              <slot\n                name=\"default\"\n                :model=\"model\"\n                :level=\"level\"\n                :index=\"index\"\n                :refresh=\"refresh\"\n              ></slot>\n            </template>\n          </Nodes>\n        </template>\n        <template v-else-if=\"defaultMsg\">\n          <div class=\"text-muted px-3\">There are no children yet</div>\n        </template>\n      </ContentLoader>\n    </div>\n  </div>\n</template>\n<style scoped lang=\"scss\">\n@import \"@scss/bootstrap\";\n\n.node {\n  position: relative;\n\n  .node-header {\n    min-height: 40px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    user-select: none;\n\n    .prefix {\n      width: 40px;\n      min-width: 40px;\n      display: flex;\n      flex-direction: row;\n      justify-content: center;\n      align-items: center;\n\n      .toggle-icon {\n        width: 40px;\n        min-width: 40px;\n        display: flex;\n        flex-direction: row;\n        justify-content: center;\n        align-items: center;\n        cursor: pointer;\n        color: $gray-5;\n        @include font-size(1.5);\n        transition: all 0.25s ease;\n\n        &:hover {\n          color: $primary;\n        }\n      }\n    }\n\n    .title {\n      flex: auto;\n      display: flex;\n      flex-direction: row;\n    }\n  }\n\n  .node-body {\n    position: relative;\n    padding: 15px 0 15px 15px;\n\n    &:before {\n      content: \"\";\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 19px;\n      width: 2px;\n      height: 100%;\n      background: $gray-5;\n    }\n  }\n\n  &:hover {\n    > .node-header {\n      .prefix {\n        .toggle-icon {\n          color: $primary;\n        }\n      }\n\n      > .title {\n        color: $black;\n      }\n    }\n\n    > .node-body {\n      &:before {\n        background: $primary;\n      }\n    }\n  }\n}\n</style>\n","<script setup lang=\"ts\">\nimport { provide, ref, nextTick } from 'vue';\nimport Nodes from './Nodes.vue';\n\ntype Props = {\n    dataFactory: (args: { parent: any, level: number, index: number }, callback: (data: any) => void) => void,\n    defaultMsg?: boolean\n}\n\nconst { dataFactory, defaultMsg = false } = defineProps<Props>()\n\ntype Slots = {\n  default: (props: {\n    model: any;\n    level: number;\n    index: number;\n    refresh: () => void;\n  }) => void;\n};\ndefineSlots<Slots>();\n\nprovide('dataFactory', dataFactory)\n\nconst children = ref<any>([])\n\nconst fetch = () => {\n    dataFactory({ parent: null, level: 0, index: 0 }, (data: any) => {\n        children.value = data\n    })\n}\n\nconst refresh = () => {\n    children.value = []\n    nextTick(() => {\n        fetch()\n    })\n}\n\nfetch()\n\ndefineExpose({ refresh })\n</script>\n<template>\n    <div\n        v-if=\"children.length > 0\"\n        class=\"tree\"\n    >\n        <Nodes\n            :children=\"children\"\n            :refresh=\"refresh\"\n            :default-msg=\"defaultMsg\"\n        >\n            <template #=\"{ model, level, index, refresh }\">\n                <slot\n                    name=\"default\"\n                    :model=\"model\"\n                    :level=\"level\"\n                    :index=\"index\"\n                    :refresh=\"refresh\"\n                ></slot>\n            </template>\n        </Nodes>\n    </div>\n</template>\n<style scoped lang=\"scss\">\n.tree {\n    position: relative;\n    &,\n    * {\n        transition: all 0.25s ease;\n    }\n}\n</style>\n","const directive = {\n  beforeMount(el: any, binding: any, vnode: any) {\n    el.clickOutsideEvent = function (event: any) {\n      if (\n        !(el === event.target || el.contains(event.target)) &&\n        binding.value\n      ) {\n        binding.value(event, el);\n      }\n    };\n    document.addEventListener(\"click\", el.clickOutsideEvent);\n    document.addEventListener(\"touchstart\", el.clickOutsideEvent);\n  },\n  unmounted(el: any) {\n    document.removeEventListener(\"click\", el.clickOutsideEvent);\n    document.removeEventListener(\"touchstart\", el.clickOutsideEvent);\n  },\n};\n\nexport const vClickOutside = directive;\n","<script setup lang=\"ts\">\nimport { ref, nextTick } from \"vue\";\nimport { vClickOutside } from \"@/directives/click-outside\";\n\nconst active = ref<boolean>(false);\nconst contextMenu = ref<any>(null);\nconst element = ref<any>(null);\nconst x = ref<number | string>(0);\nconst y = ref<number | string>(0);\n\nconst emit = defineEmits([\"open\", \"close\"]);\n\nconst open = (event) => {\n  active.value = true;\n  document.body.click();\n  nextTick(() => {\n    calculatePosition(event.clientX, event.clientY);\n    emit(\"open\");\n  });\n};\n\nconst close = () => {\n  active.value = false;\n  emit(\"close\");\n};\n\nconst calculatePosition = (clientX: number, clientY: number) => {\n  x.value = clientX;\n  y.value = clientY;\n  const vw = Math.max(\n    document.documentElement.clientWidth || 0,\n    window.innerWidth || 0\n  );\n  const vh = Math.max(\n    document.documentElement.clientHeight || 0,\n    window.innerHeight || 0\n  );\n  if (contextMenu.value) {\n    const { width, height } = contextMenu.value.getBoundingClientRect();\n    if (width + x.value > vw && x.value - width < 0) {\n      x.value = Math.ceil((width + x.value) / 2);\n    } else if (width + x.value > vw) {\n      x.value -= width;\n    }\n    if (height + y.value > vh && y.value - height < 0) {\n      y.value = Math.ceil((height + y.value) / 2);\n    } else if (height + y.value > vh) {\n      y.value -= height;\n    }\n  }\n  x.value = `${x.value}px`;\n  y.value = `${y.value}px`;\n};\n\ndefineExpose({ open, close });\n</script>\n<template>\n  <slot name=\"default\" ref=\"element\" :open=\"(event) => open(event)\"></slot>\n  <Teleport to=\"body\">\n    <div\n      v-if=\"active\"\n      ref=\"contextMenu\"\n      class=\"context-menu\"\n      v-click-outside=\"close\"\n    >\n      <slot name=\"contextmenu\">\n        <div class=\"fallback\">No content found</div>\n      </slot>\n    </div>\n  </Teleport>\n</template>\n<style scoped lang=\"scss\">\n@import \"@scss/config\";\n@import \"@scss/mixins/dark\";\n\n.context-menu {\n  position: absolute;\n  top: v-bind(y);\n  left: v-bind(x);\n  display: block;\n  padding: 10px;\n  background: $white;\n  border: 1px solid $gray-2;\n  min-width: 200px;\n  width: fit-content;\n  border-radius: 10px;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16);\n  white-space: nowrap;\n  z-index: 100000;\n  user-select: none;\n  @include dark {\n    background: $gray-9;\n    border: 1px solid $gray-7;\n  }\n\n  .fallback {\n    position: relative;\n    color: $gray-6;\n    user-select: none;\n    @include dark {\n      color: $gray-3;\n    }\n  }\n}\n</style>\n","import { Tooltip } from \"bootstrap\";\n\nconst tooltips = new Map<HTMLElement, Tooltip>();\n\nconst directive = {\n  beforeMount(el: HTMLElement, binding: any, vnode: any) {\n    let options: any = {};\n    if (typeof binding.value === \"object\") {\n      el.setAttribute(\"title\", binding.value?.title ?? null);\n      options = { ...options, ...binding.value };\n    } else if (typeof binding.value === \"string\") {\n      el.setAttribute(\"title\", binding.value);\n      options.title = binding.value;\n    }\n    tooltips.set(el, new Tooltip(el, options));\n  },\n  beforeUnmount(el: HTMLElement) {\n    tooltips.get(el)?.dispose();\n    tooltips.delete(el);\n  },\n};\n\nexport const vTooltip = directive;\n","<script lang=\"ts\">\nconst cache: any = {};\nconst components: any = [];\n</script>\n<script setup lang=\"ts\">\nimport { api } from \"@/lib/api\";\nimport {\n  onMounted,\n  ref,\n  getCurrentInstance,\n  ComponentInternalInstance,\n  nextTick,\n} from \"vue\";\nimport ContentLoader from \"./ContentLoader.vue\";\nimport { ucFirst } from \"@/lib/helper/strings\";\nimport ContextMenu from \"./ContextMenu.vue\";\nimport { user } from \"@/lib/metadata\";\nimport { vTooltip } from \"@/modules/bootstrap/directives/tooltip\";\nimport Icon from \"@/components/Icon.vue\";\nimport { mdiCheckboxBlankOutline, mdiCheckboxMarkedOutline } from \"@mdi/js\";\n\ntype Props = {\n  value: number | string;\n  startWith: string;\n};\n\nconst { value, startWith } = defineProps<Props>();\n\nconst instance = getCurrentInstance();\ncomponents.push(instance);\n\nconst items = ref<any>(null);\nconst loader = ref<any>(null);\nconst selectedItem = ref<any>(null);\nconst contextMenu = ref<any>(null);\n\nconst fetch = (force: boolean = false) => {\n  return new Promise((resolve) => {\n    loader.value?.start();\n    items.value = null;\n    if (!force && Object.hasOwn(cache, startWith)) {\n      nextTick(() => {\n        items.value = [...cache[startWith]];\n        findSelectedItem();\n        loader.value?.stop();\n        resolve(items.value);\n      });\n    } else {\n      api()\n        .get(`/settings/references?startWith=${startWith}`)\n        .then(({ data }: any) => {\n          items.value = cache[startWith] = data.map((item: any) => {\n            return updateItem(item);\n          });\n          findSelectedItem();\n          resolve(items.value);\n        })\n        .finally(() => {\n          loader.value?.stop();\n        });\n    }\n  });\n};\n\nconst updateItem = (item: any) => {\n  return {\n    ...item,\n    label: item.name\n      .split(\".\")\n      .reverse()\n      .map((word: string) => ucFirst(word))\n      .join(\" \"),\n  };\n};\n\nconst findSelectedItem = () => {\n  selectedItem.value = null;\n  items.value.forEach((item: any) => {\n    if (+item.value === +value) {\n      selectedItem.value = { ...updateItem(item) };\n    }\n  });\n};\n\nconst save = (item: any) => {\n  const oldId = selectedItem.value?.id ?? 0;\n  const newId = item.id;\n  if (oldId !== newId) {\n    api()\n      .post(\"/settings/references\", { oldId, newId, value })\n      .finally(() => {\n        contextMenu.value?.close();\n        fetch(true).then(() => {\n          components.forEach(\n            (component: ComponentInternalInstance | null, index: number) => {\n              if (component?.uid !== instance?.uid) {\n                component?.exposed?.fetch();\n              }\n            }\n          );\n        });\n      });\n    selectedItem.value = { ...item, value };\n  }\n};\n\nonMounted(() => {\n  fetch();\n});\n\ndefineExpose({ fetch });\n</script>\n<template>\n  <template v-if=\"user().type === 'developer'\">\n    <ContextMenu ref=\"contextMenu\">\n      <template #=\"{ open }\">\n        <span @click.right.prevent=\"open($event)\">\n          <slot>{{ value }}</slot\n          ><sup\n            v-if=\"selectedItem && +selectedItem.value === +value\"\n            v-tooltip=\"`${selectedItem.label}\\n${selectedItem.name}`\"\n            class=\"text-danger\"\n            >*</sup\n          >\n        </span>\n      </template>\n      <template #contextmenu>\n        <ContentLoader ref=\"loader\" title=\"References\">\n          <template v-if=\"items && items.length > 0\">\n            <ul class=\"list-group list-group-flush\">\n              <template v-for=\"item in items\" :key=\"item.id\">\n                <li class=\"list-group-item p-0\" @click=\"save(item)\">\n                  <div class=\"item\">\n                    <template\n                      v-if=\"selectedItem && +selectedItem.value === +item.value\"\n                    >\n                      <Icon :path=\"mdiCheckboxMarkedOutline\" color=\"success\" />\n                    </template>\n                    <template v-else>\n                      <Icon :path=\"mdiCheckboxBlankOutline\" color=\"muted\" />\n                    </template>\n                    <span class=\"name\">\n                      {{ item.label }}\n                    </span>\n                  </div>\n                </li>\n              </template>\n            </ul>\n          </template>\n          <template v-else>\n            <div class=\"text-muted\">There are no references yet</div>\n          </template>\n        </ContentLoader>\n      </template>\n    </ContextMenu>\n  </template>\n  <template v-else>\n    <slot>{{ value }}</slot>\n  </template>\n</template>\n<style scoped lang=\"scss\">\n@import \"@scss/config\";\n@import \"@scss/mixins/font-size\";\n@import \"@scss/mixins/dark\";\n\n.item {\n  display: flex;\n  flex-direction: row;\n  cursor: pointer;\n  gap: 5px;\n  align-items: center;\n  height: 40px;\n\n  .name {\n    color: $gray-8;\n    @include font-size(1);\n    @include dark {\n      color: $gray-1;\n    }\n  }\n}\n</style>\n","<script setup lang=\"ts\">\nimport Button from \"@/modules/bootstrap/components/Button.vue\";\nimport { ref } from \"vue\";\nimport Icon from \"@/components/Icon.vue\";\nimport { mdiLink } from \"@mdi/js\";\nimport ModalForm from \"@/modules/form/components/helper/ModalForm.vue\";\nimport { Model } from \"@/modules/form/lib/model\";\nimport { api } from \"@/lib/api\";\nimport { nl2br } from \"@/lib/helper/strings\";\nimport { Field } from \"@/modules/form/lib/field\";\nimport StringInput from \"@/modules/form/components/StringInput.vue\";\nimport { successToast } from \"@/modules/bootstrap/lib/toast\";\n\ndefineOptions({\n  inheritAttrs: false,\n});\n\ntype Props = {\n  target: string;\n  name: string;\n  route: string;\n  params: { [name: string]: any };\n};\nconst { target, name, route, params } = defineProps<Props>();\n\nconst btn = ref<any>(null);\nconst modal = ref<any>(null);\n\nclass FriendlyUrl extends Model {\n  get id(): Field {\n    return this.field(\"id\", \"ID\", this.initData?.id ?? null);\n  }\n\n  get target(): Field {\n    return this.field(\"target\", \"Target\", this.initData?.target ?? \"default\");\n  }\n\n  get name(): Field {\n    return this.field(\"name\", \"Name\", this.initData?.name ?? \"\");\n  }\n\n  get pattern(): Field {\n    return this.field(\"pattern\", \"Pattern\", this.initData?.pattern ?? \"\");\n  }\n\n  get route(): Field {\n    return this.field(\"route\", \"Route\", this.initData?.route ?? \"\");\n  }\n\n  get params(): Field {\n    return this.field(\"params\", \"Params\", this.initData?.params ?? {});\n  }\n\n  get rules(): any[] {\n    return [];\n  }\n};\n\nconst open = () => {\n  btn.value?.start?.();\n  api()\n    .get(`/friendlyUrl?filter[target]=${target}`)\n    .then(({ data }: any) => {\n      modal.value?.open?.(\n        data[0] ?? {\n          target,\n          name,\n          route,\n          params,\n        }\n      );\n    })\n    .finally(() => {\n      btn.value?.stop?.();\n    });\n};\n\nconst save = (model: FriendlyUrl, done: (onlyStop?: boolean) => void) => {\n  let request;\n  if (model.isNewRecord) {\n    request = api().post(\"/friendlyUrl\", model.data);\n  } else {\n    request = api().put(`/friendlyUrl/${model.id.value}`, model.data);\n  }\n  request.then(() => {\n    successToast(\n      `${name} url Saved Successfully`\n    );\n    done();\n  }).catch((err) => {\n    done(true);\n    model?.addRemoteErrors?.(err);\n  })\n};\n</script>\n<template>\n  <Button ref=\"btn\" @click=\"open\" v-bind=\"$attrs\" spinner-small> <Icon :path=\"mdiLink\"></Icon>Url</Button>\n  <ModalForm\n    ref=\"modal\"\n    :name=\"nl2br(name)\"\n    :model-class=\"FriendlyUrl\"\n    @save=\"save\"\n  >\n    <template #=\"{ model }\">\n      <StringInput :field=\"model.pattern\" />\n    </template>\n  </ModalForm>\n</template>\n","<script setup lang=\"ts\">\nimport Button from \"@/modules/bootstrap/components/Button.vue\";\nimport Modal from \"@/modules/bootstrap/components/Modal.vue\";\nimport { ref } from \"vue\";\nimport Icon from \"@/components/Icon.vue\";\nimport { mdiSearchWeb } from \"@mdi/js\";\nimport Seo from \"./Seo.vue\";\n\ndefineOptions({\n  inheritAttrs: false,\n});\n\nexport type Props = {\n  target?: string;\n  title?: string;\n};\nconst { target = \"\", title = \"\" } = defineProps<Props>();\n\nconst modal = ref<any>(null);\n\nconst open = () => {\n  modal.value?.open();\n};\n</script>\n<template>\n  <Button v-bind=\"$attrs\" @click=\"open\">\n    <Icon :path=\"mdiSearchWeb\" /> Seo\n  </Button>\n  <Modal ref=\"modal\" :title=\"`${title ?? target} SEO`\" size=\"xl\">\n    <Seo :target=\"target\"></Seo>\n  </Modal>\n</template>\n","<script setup lang=\"ts\">\nimport { Category } from \"@/modules/cms/forms/category\";\nimport { api } from \"@/lib/api\";\nimport Button from \"@/modules/bootstrap/components/Button.vue\";\nimport ModalForm from \"@/modules/form/components/helper/ModalForm.vue\";\nimport { ref, computed } from \"vue\";\nimport Icon from \"@/components/Icon.vue\";\nimport { mdiCogOutline, mdiPencil, mdiPlusThick, mdiTranslate } from \"@mdi/js\";\nimport Tree from \"@/modules/tree/Tree.vue\";\nimport Navs from \"@/modules/bootstrap/components/Navs.vue\";\nimport { languages } from \"@/lib/metadata\";\nimport TabContent from \"@/modules/bootstrap/components/TabContent.vue\";\nimport StringInput from \"@/modules/form/components/StringInput.vue\";\nimport TextInput from \"@/modules/form/components/TextInput.vue\";\nimport AttrsInput from \"@/modules/cms/components/AttrsInput.vue\";\nimport RadioInput from \"@/modules/form/components/RadioInput.vue\";\nimport Ref from \"@/components/Ref.vue\";\nimport FriendlyUrlModal from \"@/modules/friendlyurl/components/FriendlyUrlModal.vue\";\nimport SeoModal from \"@/modules/seo/components/SeoModal.vue\";\nimport { na } from \"@/lib/helper/strings\";\n\ntype Props = {\n  type: string;\n  id?: number;\n};\n\nconst { type, id = 0 } = defineProps<Props>();\n\nconst modal = ref<any>(null);\nconst tree = ref<any>(null);\nconst refresher = ref<any>(null);\nconst tabContent = ref<any>(null);\n\nconst factory = (\n  args: { parent: any; level: number; index: number },\n  callback: (data: any) => void\n) => {\n  fetch(args.parent).then((data: any) => {\n    callback(data);\n  });\n};\n\nconst fetch = (parent: any) => {\n  return new Promise((resolve) => {\n    api()\n      .get(\n        `/categories?expand=local,locals&filter[type][like]=${\n          id > 0 ? `[${id}]` : ``\n        }${type}&filter[parent_id]=${\n          parent?.id ?? null\n        }&sort=position,local.name`\n      )\n      .then(({ data }: any) => {\n        resolve(data);\n      });\n  });\n};\n\nconst add = (refresh, parent: any = null) => {\n  refresher.value = refresh;\n  modal.value?.open?.({\n    type: `${id > 0 ? `[${id}]` : ``}${type}`,\n    parent_id: parent?.id ?? null,\n    path: parent?.id\n      ? `${[parent.id]\n          .reduce(\n            (list, item) => {\n              list.push(item);\n              return list;\n            },\n            parent.path ? parent.path.split(\",\") : []\n          )\n          .join(\",\")}`\n      : null,\n  });\n};\n\nconst edit = (refresh, data: any) => {\n  refresher.value = refresh;\n  modal.value?.open?.(data);\n};\n\nconst remove = (data: any) => {};\n\nconst save = (model: Category, done: () => void) => {\n  let request;\n  if (model.isNewRecord) {\n    request = api().post(\"/categories\", model.data);\n  } else {\n    request = api().put(`/categories/${model.id.value}`, model.data);\n  }\n  request.then(() => {\n    done();\n    if (refresher.value) {\n      refresher.value();\n      refresher.value = null;\n    }\n  });\n};\n\nconst tabs = computed(() => {\n  return [\n    ...languages().map((language: any) => {\n      return {\n        name: language.value,\n        label: language.label,\n        icon: mdiTranslate,\n      };\n    }),\n    { name: \"settings\", label: \"Settings\", icon: mdiCogOutline },\n  ];\n});\n\nconst statusList = computed(() => {\n  return [\n    {\n      value: \"active\",\n      label: \"Active\",\n    },\n    {\n      value: \"draft\",\n      label: \"Draft\",\n    },\n    {\n      value: \"pending\",\n      label: \"Pending\",\n    },\n    {\n      value: \"deleted\",\n      label: \"Deleted\",\n    },\n  ];\n});\n\nconst select = (tab: any) => {\n  tabContent.value.select(tab);\n};\n\nconst realType = computed(() => `${id > 0 ? `[${id}]` : ``}${type}`);\n</script>\n<template>\n  <div class=\"actions d-flex flex-row gap-3\">\n    <Button v-if=\"tree\" color=\"primary\" @click=\"add(tree.refresh)\">\n      <Icon :path=\"mdiPlusThick\" />Add New Category\n    </Button>\n    <FriendlyUrlModal\n      :target=\"`content:${realType}`\"\n      :name=\"type\"\n      route=\"/default/categories\"\n      :params=\"{ type: realType }\"\n    ></FriendlyUrlModal>\n    <SeoModal\n      :target=\"`categories:${realType}-`\"\n      :title=\"type\"\n      color=\"primary\"\n    ></SeoModal>\n  </div>\n  <div class=\"categories\">\n    <Tree ref=\"tree\" :data-factory=\"factory\" default-msg>\n      <template #=\"{ model, level, index, refresh }\">\n        <div class=\"category-node\">\n          <div class=\"name\">\n            <Ref\n              :key=\"model.id\"\n              :value=\"model.id\"\n              :start-with=\"`cms.categories.${realType}`\"\n            >\n              {{ model.local.title }}\n            </Ref>\n          </div>\n          <div class=\"node-actions\">\n            <FriendlyUrlModal\n              :target=\"`category:${model.id}`\"\n              :name=\"model.local?.title ?? na()\"\n              route=\"/default/content\"\n              :params=\"{ id: model.id }\"\n              color=\"danger\"\n              size=\"sm\"\n            ></FriendlyUrlModal>\n            <SeoModal\n              :target=\"`category:${model.id}-`\"\n              :title=\"model?.local?.title\"\n              color=\"warning\"\n              size=\"sm\"\n            ></SeoModal>\n            <Button color=\"success\" size=\"sm\" @click=\"add(refresh, model)\">\n              <Icon :path=\"mdiPlusThick\" />\n            </Button>\n            <Button color=\"info\" size=\"sm\" @click=\"edit(refresh, model)\">\n              <Icon :path=\"mdiPencil\" />\n            </Button>\n          </div>\n        </div>\n      </template>\n    </Tree>\n  </div>\n  <ModalForm\n    name=\"Category\"\n    :model-class=\"Category\"\n    size=\"lg\"\n    ref=\"modal\"\n    @save=\"save\"\n  >\n    <template #header>\n      <Navs\n        type=\"pills\"\n        :tabs=\"tabs\"\n        alignment=\"center\"\n        @select=\"select\"\n        style=\"flex: auto\"\n      ></Navs>\n    </template>\n    <template #=\"{ model }\">\n      <TabContent :tabs=\"tabs\" type=\"tabs\" disable-navs ref=\"tabContent\">\n        <template #navs></template>\n        <template\n          v-for=\"(language, i) in languages()\"\n          :key=\"language.value\"\n          #[language.value]=\"{ tab }\"\n        >\n          <div class=\"box mb-3\">\n            <div class=\"h6\">{{ language.label }}</div>\n            <div\n              :style=\"[\n                language.value === 'ar'\n                  ? { direction: 'rtl' }\n                  : { direction: 'ltr' },\n              ]\"\n            >\n              <div class=\"mb-3\">\n                <StringInput\n                  :field=\"model.locals[i].title\"\n                  :style=\"[\n                    language.value === 'ar'\n                      ? { direction: 'rtl', 'text-align': 'right' }\n                      : { direction: 'ltr', 'text-align': 'left' },\n                  ]\"\n                ></StringInput>\n              </div>\n              <div class=\"mb-3\">\n                <TextInput\n                  :field=\"model.locals[i].excerpt\"\n                  :style=\"[\n                    language.value === 'ar'\n                      ? { direction: 'rtl', 'text-align': 'right' }\n                      : { direction: 'ltr', 'text-align': 'left' },\n                  ]\"\n                ></TextInput>\n              </div>\n              <AttrsInput :model=\"model.locals[i].attrs\" />\n            </div>\n          </div>\n        </template>\n        <template #settings=\"{ tab }\">\n          <AttrsInput :model=\"model.attrs\" />\n          <div class=\"mb-3\">\n            <StringInput :field=\"model.position\" type=\"number\"></StringInput>\n          </div>\n          <div class=\"mb-3\">\n            <RadioInput\n              :field=\"model.status\"\n              :options=\"statusList\"\n              inline\n            ></RadioInput>\n          </div>\n        </template>\n      </TabContent>\n    </template>\n  </ModalForm>\n</template>\n<style scoped lang=\"scss\">\n@import \"@scss/bootstrap\";\n\n.actions {\n  position: relative;\n  margin-bottom: 20px;\n  background: $gray-1;\n  border-radius: 10px;\n  padding: 10px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  @include dark {\n    background: $gray-8;\n  }\n}\n\n.categories {\n  position: relative;\n}\n\n.category-node {\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  height: 40px;\n  align-items: center;\n  padding: 0 10px;\n  border-radius: 10px;\n  transition: all 0.25s ease;\n\n  .name {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    flex: auto;\n    color: $gray-9;\n    @include dark {\n      color: $gray-1;\n    }\n  }\n\n  .node-actions {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    width: fit-content;\n    gap: 5px;\n  }\n\n  &:hover {\n    background: $gray-1;\n    @include dark {\n      background: $gray-8;\n    }\n    .name {\n      color: $gray-9;\n      @include dark {\n        color: $gray-1;\n      }\n    }\n  }\n}\n</style>\n","<script setup lang=\"ts\">\nimport { cms, languages, translate } from \"@/lib/metadata\";\nimport Crud from \"@/modules/crud/components/Crud.vue\";\nimport { FieldType, createFields, fetch } from \"@/modules/crud/lib/crud\";\nimport { ref, computed } from \"vue\";\nimport Button from \"@/modules/bootstrap/components/Button.vue\";\nimport Icon from \"@/components/Icon.vue\";\nimport {\n  mdiCogOutline,\n  mdiDelete,\n  mdiFileTree,\n  mdiPencil,\n  mdiPlusThick,\n  mdiRayStart,\n  mdiTranslate,\n} from \"@mdi/js\";\nimport { Content } from \"@/modules/cms/forms/content\";\nimport { api } from \"@/lib/api\";\nimport ModalForm from \"@/modules/form/components/helper/ModalForm.vue\";\nimport Navs from \"@/modules/bootstrap/components/Navs.vue\";\nimport TabContent from \"@/modules/bootstrap/components/TabContent.vue\";\nimport StringInput from \"@/modules/form/components/StringInput.vue\";\nimport TextInput from \"@/modules/form/components/TextInput.vue\";\nimport AttrsInput from \"@/modules/cms/components/AttrsInput.vue\";\nimport EditorInput from \"@/modules/editor/components/EditorInput.vue\";\nimport CheckInput from \"@/modules/form/components/checkInput.vue\";\nimport RadioInput from \"@/modules/form/components/RadioInput.vue\";\nimport { displayTree } from \"@/lib/helper/array\";\nimport { confirm } from \"@/modules/bootstrap/lib/confirm\";\nimport { successToast } from \"@/modules/bootstrap/lib/toast\";\nimport Wait from \"@/components/Wait.vue\";\nimport { icon, na } from \"@/lib/helper/strings\";\nimport { maxContents } from \"../lib/cms\";\nimport Modal from \"@/modules/bootstrap/components/Modal.vue\";\nimport Categories from \"./Categories.vue\";\nimport Ref from \"@/components/Ref.vue\";\nimport EditorView from \"@/modules/editor/components/EditorView.vue\";\nimport SeoModal from \"@/modules/seo/components/SeoModal.vue\";\nimport FriendlyUrlModal from \"@/modules/friendlyurl/components/FriendlyUrlModal.vue\";\n\ntype Props = {\n  type: string;\n  id?: number;\n};\n\nconst { type, id = 0 } = defineProps<Props>();\n\nconst crud = ref<any>(null);\nconst modal = ref<any>(null);\n\nconst categoriesModal = ref<any>(null);\nconst tabContent = ref<any>(null);\nconst categories = ref<any>(null);\nconst textCols = ref<any>([]);\n\ntype Item = {\n  id?: number;\n  type?: string;\n  status?: \"active\" | \"draft\" | \"pendig\" | \"deleted\";\n  position?: number;\n  attrs?: any;\n  local?: {\n    id?: number;\n    content_id?: number;\n    language?: string;\n    title?: string;\n    excerpt?: string;\n    blocks?: any;\n    plain_text?: string;\n    attrs?: any;\n  };\n};\n\nconst fields = createFields(\n  {\n    type: FieldType.Number,\n    name: \"id\",\n    label: \"ID\",\n    fitable: true,\n    sortable: true,\n    searchable: true,\n  },\n  {\n    type: FieldType.String,\n    name: \"title\",\n    label: \"Title\",\n    searchable: true,\n    sortable: true,\n  },\n  {\n    type: FieldType.String,\n    name: \"status\",\n    label: \"Status\",\n    fitable: true,\n    searchable: true,\n    sortable: true,\n  },\n  {\n    type: FieldType.Number,\n    name: \"position\",\n    label: \"Position\",\n    fitable: true,\n    searchable: true,\n    sortable: true,\n  },\n  {\n    type: FieldType.Number,\n    name: \"type\",\n    label: \"Type\",\n    fitable: true,\n    searchable: true,\n    sortable: true,\n  }\n);\n\nconst title = computed(\n  () => cms()?.type?.find((item: any) => item.name === type)?.label ?? type\n);\n\nconst add = () => {\n  modal.value?.open?.({ type: `${id > 0 ? `[${id}]` : ``}${type}` });\n};\nconst edit = (data) => {\n  const record = { ...data };\n  if (record.categories) {\n    record.categories = record.categories.map((item: any) => item.id);\n  }\n  modal.value?.open?.(record);\n};\nconst save = (model: Content, done: () => void) => {\n  let request;\n  if (model.isNewRecord) {\n    request = api().post(\"/contents\", model.data);\n  } else {\n    request = api().put(`/contents/${model.id.value}`, model.data);\n  }\n  request.then(() => {\n    successToast(\n      `${title.value} ${model.locals[0].title.value} Saved Successfully`\n    );\n    crud.value?.refresh();\n    done();\n  });\n};\n\nconst remove = (data: any) => {\n  confirm(`Delete ${data.locals[0].title}`).then((confirmed: boolean) => {\n    if (confirmed) {\n      api()\n        .delete(`/contents/${data.id}`)\n        .then(() => {\n          successToast(\n            `Content \"${data.locals[0].title}\" deleted successfully`\n          );\n          crud.value?.refresh();\n        });\n    }\n  });\n};\n\nconst tabs = computed(() => {\n  return [\n    ...languages().map((language: any) => {\n      return {\n        name: language.value,\n        label: language.label,\n        icon: mdiTranslate,\n      };\n    }),\n    { name: \"settings\", label: \"Settings\", icon: mdiCogOutline },\n  ];\n});\n\nconst select = (tab: any) => {\n  tabContent.value.select(tab);\n};\n\nconst updateTextCol = (el: any) => {\n  textCols.value.push(el);\n};\n\nconst statusList = computed(() => {\n  return [\n    {\n      value: \"active\",\n      label: \"Active\",\n    },\n    {\n      value: \"draft\",\n      label: \"Draft\",\n    },\n    {\n      value: \"pending\",\n      label: \"Pending\",\n    },\n    {\n      value: \"deleted\",\n      label: \"Deleted\",\n    },\n  ];\n});\n\nconst settingsCols = computed(() => {\n  if (Array.isArray(categories.value) && categories.value.length > 0) {\n    return \"col-md-3\";\n  }\n  return \"col-md-4\";\n});\n\nconst fetchCategories = () => {\n  categories.value = [];\n  api()\n    .get(\n      `/categories?expand=local&filter[type]=${type}&sort=position,local.name`\n    )\n    .then(async ({ data }: any) => {\n      categories.value = displayTree(\n        (item: any, prefix: string, level: number, hasChildren: boolean) => {\n          return {\n            value: item.id,\n            label: `${prefix}&nbsp;${item.local.title}`,\n            title: item.local.title,\n          };\n        },\n        data,\n        {\n          delimiter: icon({ path: mdiRayStart }),\n        }\n      );\n    });\n};\n\nconst openCategories = () => {\n  categoriesModal.value?.open?.();\n};\n\nconst closeCategories = () => {\n  fetchCategories();\n};\n\nconst realType = computed(() => `${id > 0 ? `[${id}]` : ``}${type}`);\n\nfetchCategories();\n</script>\n<template>\n  <Crud\n    ref=\"crud\"\n    :fields=\"fields\"\n    :fetch=\"\n      fetch <\n      Item >\n      ('/contents',\n      'local,locals,categories',\n      { filter: { type: { like: realType } } })\n    \"\n  >\n    <template #topActions>\n      <template v-if=\"!maxContents(type)\">\n        <FriendlyUrlModal\n          :target=\"`content:${realType}`\"\n          :name=\"type\"\n          route=\"/default/contents\"\n          :params=\"{ type: realType }\"\n        ></FriendlyUrlModal>\n        <SeoModal\n          :target=\"`contents:${realType}-`\"\n          :title=\"type\"\n          color=\"primary\"\n        ></SeoModal>\n        <Button color=\"primary\" @click=\"openCategories\">\n          <Icon :path=\"mdiFileTree\" color=\"info\" />{{ translate(\"Categories\") }}\n        </Button>\n        <Button color=\"primary\" @click=\"add\">\n          <Icon :path=\"mdiPlusThick\" color=\"info\" />{{\n            `${translate(\"Add New\")} ${title}`\n          }}\n        </Button>\n      </template>\n    </template>\n    <template #actions=\"{ item }\">\n      <FriendlyUrlModal\n        :target=\"`content:${item.id}`\"\n        :name=\"item.local?.title ?? na()\"\n        route=\"/default/content\"\n        :params=\"{ id: item.id }\"\n        color=\"success\"\n        size=\"sm\"\n      ></FriendlyUrlModal>\n      <SeoModal\n        :target=\"`content:${item.id}-`\"\n        :title=\"item?.local?.title\"\n        color=\"warning\"\n        size=\"sm\"\n      ></SeoModal>\n      <Button color=\"info\" class=\"text-light\" @click=\"edit(item)\" size=\"sm\">\n        <Icon :path=\"mdiPencil\" color=\"light\" />Edit\n      </Button>\n      <Button color=\"danger\" class=\"text-light\" @click=\"remove(item)\" size=\"sm\">\n        <Icon :path=\"mdiDelete\" color=\"light\" />Delete\n      </Button>\n    </template>\n    <template #idValue=\"{ item }\">\n      <Ref\n        v-if=\"item.id\"\n        :key=\"item.id\"\n        :value=\"item.id\"\n        :start-with=\"`cms.contents.${id > 0 ? `${id}.` : ``}${type}`\"\n      >\n        {{ item.id }}\n      </Ref>\n    </template>\n    <template #titleValue=\"{ item }\">\n      {{ item.local?.title ?? na() }}\n    </template>\n    <template #details=\"{ item }\">\n      <EditorView :content=\"item.local?.blocks\" />\n    </template>\n  </Crud>\n  <ModalForm\n    :name=\"title\"\n    :model-class=\"Content\"\n    fullscreen\n    ref=\"modal\"\n    @save=\"save\"\n  >\n    <template #header>\n      <Navs\n        type=\"pills\"\n        :tabs=\"tabs\"\n        alignment=\"center\"\n        @select=\"select\"\n        style=\"flex: auto\"\n      ></Navs>\n    </template>\n    <template #=\"{ model }\">\n      <TabContent :tabs=\"tabs\" type=\"tabs\" disable-navs ref=\"tabContent\">\n        <template\n          v-for=\"(language, i) in languages()\"\n          :key=\"language.value\"\n          #[language.value]=\"{ tab }\"\n        >\n          <div\n            class=\"row h-100\"\n            :style=\"[\n              language.value === 'ar'\n                ? { direction: 'rtl' }\n                : { direction: 'ltr' },\n            ]\"\n          >\n            <div class=\"col-md-3\">\n              <div class=\"position-sticky top-0\">\n                <div class=\"mb-3\">\n                  <StringInput\n                    :field=\"model.locals[i].title\"\n                    :style=\"[\n                      language.value === 'ar'\n                        ? { direction: 'rtl', 'text-align': 'right' }\n                        : { direction: 'ltr', 'text-align': 'left' },\n                    ]\"\n                  ></StringInput>\n                </div>\n                <div class=\"mb-3\">\n                  <TextInput\n                    :field=\"model.locals[i].excerpt\"\n                    :style=\"[\n                      language.value === 'ar'\n                        ? { direction: 'rtl', 'text-align': 'right' }\n                        : { direction: 'ltr', 'text-align': 'left' },\n                      { height: '300px' },\n                    ]\"\n                  ></TextInput>\n                </div>\n                <AttrsInput :model=\"model.locals[i].attrs\" />\n              </div>\n            </div>\n            <div class=\"col-md-9\" :ref=\"updateTextCol\">\n              <Wait v-if=\"textCols[i]\" :time=\"800\">\n                <EditorInput\n                  :field=\"model.locals[i].blocks\"\n                  :rtl=\"language.value === 'ar'\"\n                  :altitude=\"textCols[0].clientHeight - 18\"\n                  no-label\n                ></EditorInput>\n              </Wait>\n            </div>\n          </div>\n        </template>\n        <template #settings=\"{ tab }\">\n          <div class=\"row h-100\">\n            <div v-if=\"categories.length > 0\" :class=\"{ [settingsCols]: true }\">\n              <div class=\"categories-checks\">\n                <CheckInput\n                  v-if=\"categories.length > 0\"\n                  :field=\"model.categories\"\n                  :options=\"categories\"\n                ></CheckInput>\n              </div>\n            </div>\n            <div :class=\"{ [settingsCols]: true }\">\n              <AttrsInput :model=\"model.attrs1\" />\n              <div class=\"mb-3\">\n                <StringInput :field=\"model.position\"></StringInput>\n              </div>\n              <div class=\"mb-3\">\n                <RadioInput :field=\"model.status\" inline :options=\"statusList\">\n                </RadioInput>\n              </div>\n            </div>\n            <div\n              v-if=\"model.attrs2.length > 0\"\n              :class=\"{ [settingsCols]: true }\"\n            >\n              <AttrsInput :model=\"model.attrs2\" />\n            </div>\n            <div\n              v-if=\"model.attrs3.length > 0\"\n              :class=\"{ [settingsCols]: true }\"\n            >\n              <AttrsInput :model=\"model.attrs3\" />\n            </div>\n          </div>\n        </template>\n      </TabContent>\n    </template>\n  </ModalForm>\n  <Modal\n    ref=\"categoriesModal\"\n    :title=\"`Categories of ${title} `\"\n    size=\"lg\"\n    @close=\"closeCategories\"\n  >\n    <Categories :type=\"type\" :id=\"id\"></Categories>\n  </Modal>\n</template>\n","/**\n * Contents.vue Startup File\n *\n * @project palacegroup1\n * @company Codendot <https://codendot.com>\n * @author Jawdat Sobh <jawdat@codendot.com>\n * @since Saturday, September 16, 2023 at 06:08 PM GMT+3\n *\n */\n\nimport { createApp } from \"@/lib/app\"\nimport AppComponent from \"../apps/Contents.vue\"\nimport bootstrap from \"../bootstrap/Contents\"\n\nconst app = createApp(\"contents\", AppComponent)\nbootstrap(app)\napp.mount()\n"],"names":["fields","setFields","createPrivateField","Attrs","Model","type","column","initData","section","typeName","types","element","fieldsList","_d","_c","_b","_a","cms","row","self","data","field","ContentLocal","__publicField","StringRule","RequiredRule","Content","list","active","ref","__props","select","tab","emit","__expose","timer","onUnmounted","splitType","name","id","maxContents","hasMax","key","config","CategoryLocal","Category","expanded","children","loader","toggle","nextTick","fetch","dataFactory","inject","doRefresh","provide","refresh","directive","el","binding","vnode","event","vClickOutside","contextMenu","x","y","open","calculatePosition","close","clientX","clientY","vw","vh","width","height","tooltips","options","Tooltip","vTooltip","cache","components","instance","getCurrentInstance","items","selectedItem","force","resolve","findSelectedItem","api","item","updateItem","word","ucFirst","save","oldId","newId","component","index","onMounted","btn","modal","FriendlyUrl","model","done","request","successToast","err","tree","refresher","tabContent","factory","args","callback","parent","add","edit","tabs","computed","languages","language","mdiTranslate","mdiCogOutline","statusList","realType","crud","categoriesModal","categories","textCols","createFields","FieldType","title","record","remove","confirm","confirmed","updateTextCol","settingsCols","fetchCategories","displayTree","prefix","level","hasChildren","icon","mdiRayStart","openCategories","closeCategories","app","createApp","AppComponent"],"mappings":"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"}