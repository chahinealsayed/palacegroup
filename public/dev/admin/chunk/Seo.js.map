{"version":3,"file":"Seo.js","sources":["../../../../resources/js/lib/queue-iteration.ts","../../../../resources/js/modules/bootstrap/components/Badge.vue","../../../../resources/js/modules/seo/components/Seo.vue"],"sourcesContent":["class QueueIteration {\n\tprivate _action: (index: number, next: () => void) => void = () => {}\n\tprivate _events: any = {}\n\n\tconstructor(public count: number) {}\n\n\tset action(callback: (index: number, next: () => void) => void) {\n\t\tthis._action = callback\n\t}\n\n\tget action(): (index: number, next: () => void) => void {\n\t\treturn this._action\n\t}\n\n\ton(eventName, callback) {\n\t\tif (!this._events.hasOwnProperty(eventName)) {\n\t\t\tthis._events[eventName] = []\n\t\t}\n\t\tthis._events[eventName].push(callback)\n\t}\n\n\tdispatch(eventName, data: unknown = null) {\n\t\tif (this._events.hasOwnProperty(eventName)) {\n\t\t\tfor (const event of this._events[eventName]) {\n\t\t\t\tevent(\n\t\t\t\t\tnew CustomEvent(eventName, {\n\t\t\t\t\t\tbubbles: true,\n\t\t\t\t\t\tdetail: {\n\t\t\t\t\t\t\ttarget: this,\n\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}\n\n\tstart() {\n\t\tthis.dispatch(\"start\")\n\t\texecute(this)\n\t}\n}\n\nfunction execute(queueIteration: QueueIteration, i: number = 0) {\n\tprogress(queueIteration, i)\n\tif (queueIteration.count > i) {\n\t\tqueueIteration.action(i, () => {\n\t\t\texecute(queueIteration, i + 1)\n\t\t})\n\t} else {\n\t\tqueueIteration.dispatch(\"done\")\n\t}\n}\n\nfunction progress(queueIteration: QueueIteration, current: number) {\n\tlet percentage = Math.ceil((current * 100) / queueIteration.count)\n\tif (percentage > 100) {\n\t\tpercentage = 100\n\t}\n\tqueueIteration.dispatch(\"progress\", {\n\t\tcurrent,\n\t\ttotal: queueIteration.count,\n\t\tpercentage: percentage,\n\t})\n}\n\nexport function createQueueIteration(count: number) {\n\treturn new QueueIteration(count)\n}\n","<script setup lang=\"ts\">\nimport { computed } from 'vue';\nimport { BadgeColor } from '../types';\n\ntype Props = {\n    color?: BadgeColor\n    bgColor?: null | BadgeColor\n    pill?: boolean\n}\n\nconst { color = \"primary\", bgColor = null, pill = false } = defineProps<Props>()\n\nconst classes = computed(() => {\n    const cls: any = {badge:true}\n    if(bgColor){\n        cls[`text-${color}`] = true\n        cls[`bg-${bgColor}`] = true\n    }else{\n        cls[`text-bg-${color}`] = true\n    }\n    if(pill){\n        cls['rounded-pill'] = true\n    }\n    return cls\n})\n\n</script>\n<template>\n    <span :class=\"classes\" v-bind=\"$attrs\">\n        <slot></slot>\n    </span>\n</template>\n","<script setup lang=\"ts\">\nimport { api } from \"@/lib/api\";\nimport { na, nl2br } from \"@/lib/helper/strings\";\nimport { languages } from \"@/lib/metadata\";\nimport { createQueueIteration } from \"@/lib/queue-iteration\";\nimport Badge from \"@/modules/bootstrap/components/Badge.vue\";\nimport Button from \"@/modules/bootstrap/components/Button.vue\";\nimport { successToast } from \"@/modules/bootstrap/lib/toast\";\nimport Crud from \"@/modules/crud/components/Crud.vue\";\nimport { createFields, fetch, FieldType } from \"@/modules/crud/lib/crud\";\nimport StringInput from \"@/modules/form/components/StringInput.vue\";\nimport TextInput from \"@/modules/form/components/TextInput.vue\";\nimport ModalForm from \"@/modules/form/components/helper/ModalForm.vue\";\nimport { Field } from \"@/modules/form/lib/field\";\nimport { Model } from \"@/modules/form/lib/model\";\nimport { ref, computed } from \"vue\";\nimport Icon from \"@/components/Icon.vue\";\nimport { mdiPencil, mdiPlusThick } from \"@mdi/js\";\n\nexport type Props = {\n  target?: string;\n};\nconst { target } = defineProps<Props>();\n\ntype ITEM = {\n  id?: number;\n  target?: string;\n  title?: string;\n  description?: string;\n  keywords?: string;\n  is_default?: boolean;\n};\n\nconst fields = createFields(\n  {\n    type: FieldType.Number,\n    name: \"id\",\n    label: \"ID\",\n    sortable: true,\n    searchable: true,\n    fitable: true,\n  },\n  {\n    type: FieldType.String,\n    name: \"title\",\n    label: \"Title\",\n    sortable: true,\n    searchable: true,\n  },\n  {\n    type: FieldType.String,\n    name: \"description\",\n    label: \"Description\",\n    sortable: true,\n    searchable: true,\n  },\n  {\n    type: FieldType.String,\n    name: \"keywords\",\n    label: \"Keywords\",\n    sortable: true,\n    searchable: true,\n    fitable: true,\n  },\n  {\n    type: FieldType.String,\n    name: \"target\",\n    label: \"Page\",\n    sortable: true,\n    searchable: true,\n    fitable: true,\n  }\n);\n\nconst crud = ref<any>(null);\nconst modal = ref<any>(null);\nconst adder = ref<any>(null);\nconst isEmpty = ref<boolean>(false);\n\nclass Seo extends Model {\n  get id(): Field {\n    return this.field(\"id\", \"ID\", this.initData?.id ?? null);\n  }\n\n  get target(): Field {\n    return this.field(\"target\", \"Target\", this.initData?.target ?? null);\n  }\n\n  get title(): Field {\n    return this.field(\"title\", \"Title\", this.initData?.title ?? \"\");\n  }\n\n  get description(): Field {\n    return this.field(\n      \"description\",\n      \"Description\",\n      this.initData?.description ?? \"\"\n    );\n  }\n\n  get keywords(): Field {\n    return this.field(\n      \"keywords\",\n      \"Keywords\",\n      this.initData?.keywords ?? [],\n      \"Separate keywords by comma\"\n    );\n  }\n\n  get rules(): any[] {\n    return [];\n  }\n}\n\nconst setEmpty = (value: boolean) => {\n  isEmpty.value = value;\n};\n\nconst add = () => {\n  adder.value?.start?.();\n  const data = crud.value?.data?.()?.map((item: ITEM) => item.target?.split('-').at(1));\n  const langs = languages().filter(({ value }) => !data.includes(value))\n  const queue = createQueueIteration(langs.length);\n  queue.action = (index, next) => {\n    api()\n      .post(\"/seo\", {\n        target: `${target}${langs?.at?.(index)?.value}`,\n        keywords: [],\n        description: \"\",\n        title: `Seo Title ${new Date().getTime()}`,\n      })\n      .then(() => {\n        next();\n      });\n  };\n  queue.on(\"done\", () => {\n    successToast(\"Seo Created Successfully\");\n    crud.value?.refresh?.();\n    adder.value?.stop?.();\n  });\n  queue.start();\n};\n\nconst edit = (data) => {\n  const record = { ...data };\n  record.keywords = record.keywords.join(\"\\n\");\n  modal.value?.open?.(record);\n};\n\nconst save = (model: Seo, done: (onlyStop?: boolean) => void) => {\n  const data = model.data;\n  data.keywords = data.keywords?.split?.(\",\") ?? [];\n  api()\n    .put(`/seo/${data.id}`, data)\n    .finally(() => {\n      successToast(\"Seo Created Successfully\");\n      crud.value?.refresh?.();\n      done();\n    }).catch((err) => {\n    done(true);\n    model?.addRemoteErrors?.(err);\n  });\n};\n\nconst params = computed(() => {\n  if (target) {\n    return { filter: { target: { like: target } } };\n  }\n  return undefined;\n});\n\nconst notAllInserted = computed(() => {\n  return crud.value?.length?.() < languages()?.length;\n});\n</script>\n<template>\n  <Crud\n    ref=\"crud\"\n    :fields=\"fields\"\n    :fetch=\"fetch < ITEM > ('/seo', undefined, params)\"\n    @empty=\"setEmpty(true)\"\n    @no-empty=\"setEmpty(false)\"\n  >\n    <template #descriptionValue=\"{ item }\">\n      <div v-html=\"nl2br(item?.description ?? '')\"></div>\n    </template>\n    <template #targetValue=\"{ item }\">\n      <div class=\"d-flex flex-horizontal gap-2\">\n        <Badge\n          color=\"primary\"\n          v-if=\"item?.target?.split?.('-')?.[0]?.toString()?.split?.(':')?.[0]\"\n          >{{\n            item?.target?.split?.(\"-\")?.[0]?.toString()?.split?.(\":\")?.[0] ?? \"\"\n          }}</Badge\n        >\n        <Badge color=\"info\" v-if=\"item?.target?.split?.('-')?.[1]\">{{\n          item?.target?.split?.(\"-\")?.[1] ?? \"\"\n        }}</Badge>\n      </div>\n    </template>\n    <template #keywordsValue=\"{ item }\">\n      <div\n        v-if=\"Array.isArray(item.keywords) && item.keywords.length > 0\"\n        class=\"d-flex flex-horizontal gap-2\"\n      >\n        <template v-for=\"keyword in item.keywords\" :key=\"keyword\">\n          <Badge color=\"warning\">{{ keyword }}</Badge>\n        </template>\n      </div>\n      <div v-else v-html=\"na()\"></div>\n    </template>\n    <template #actions=\"{ item }\">\n      <Button color=\"info\" class=\"text-light\" @click=\"edit(item)\">\n        <Icon :path=\"mdiPencil\" color=\"light\" />Edit\n      </Button>\n    </template>\n    <template #topActions>\n      <Button\n        ref=\"adder\"\n        v-if=\"target && (isEmpty || notAllInserted)\"\n        color=\"primary\"\n        class=\"text-light\"\n        @click=\"add\"\n      >\n        <Icon :path=\"mdiPlusThick\" color=\"light\" />Add Seo\n      </Button>\n    </template>\n  </Crud>\n  <ModalForm ref=\"modal\" name=\"SEO\" :model-class=\"Seo\" @save=\"save\">\n    <template #=\"{ model }\">\n      <div class=\"mb-3\">\n        <StringInput :field=\"model.title\" />\n      </div>\n      <div class=\"mb-3\">\n        <TextInput :field=\"model.description\" style=\"height: 200px\" />\n      </div>\n      <div class=\"mb-3\">\n        <TextInput :field=\"model.keywords\" style=\"height: 200px\" />\n      </div>\n    </template>\n  </ModalForm>\n</template>\n"],"names":["QueueIteration","count","__publicField","callback","eventName","data","event","execute","queueIteration","i","progress","current","percentage","createQueueIteration","classes","computed","cls","__props","fields","createFields","FieldType","crud","ref","modal","adder","isEmpty","Seo","Model","_a","setEmpty","value","add","_b","_e","_d","_c","item","langs","languages","queue","index","next","api","successToast","edit","record","save","model","done","err","params","notAllInserted"],"mappings":"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"}