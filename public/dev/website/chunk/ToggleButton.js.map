{"version":3,"file":"ToggleButton.js","sources":["../../../../resources/js/modules/bootstrap/components/Offcanvas.vue","../../../../resources/js/modules/bootstrap/components/ToggleButton.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { ref, onMounted, onUnmounted, Teleport, nextTick } from \"vue\";\nimport CloseButton from \"./CloseButton.vue\";\nimport { OffcanavsPlacement, OffcanavsResponsive } from \"../types\";\nimport Offcanvas from \"bootstrap/js/src/offcanvas\";\n\ndefineOptions({\n  inheritAttrs: false,\n});\n\ntype Slots = {\n  default: any;\n  title: any;\n};\nconst slots = defineSlots<Slots>();\n\ntype Props = {\n  title?: string;\n  placement?: OffcanavsPlacement;\n  responsive?: null | OffcanavsResponsive;\n  backdrop?: boolean | \"static\";\n  keyboard?: boolean;\n  scroll?: boolean;\n  noHeader?: boolean;\n  native?: boolean;\n};\nconst {\n  title = \"\",\n  placement = \"start\",\n  responsive = null,\n  backdrop = \"static\",\n  keyboard = false,\n  scroll = false,\n  noHeader = false,\n  native = false,\n} = defineProps<Props>();\n\nconst offcanvasRef = ref<any>(null);\nconst offcanvas = ref<any>(null);\nconst closeAnimation = ref<boolean>(false); // Reactive variable to control close animation\n\nconst component = ref<any>(native ? \"div\" : Teleport);\n\nexport type Emits = {\n  close: any;\n  closed: any;\n  prevented: any;\n  open: any;\n  opened: any;\n};\nconst emit = defineEmits<Emits>();\n\nconst onClose = (e) => {\n  emit(\"close\", e);\n};\n\nconst onClosed = (e) => {\n  emit(\"closed\", e);\n};\n\nconst onPrevented = (e) => {\n  emit(\"prevented\", e);\n};\n\nconst onOpen = (e) => {\n  emit(\"open\", e);\n};\n\nconst onOpened = (e) => {\n  emit(\"opened\", e);\n};\n\nconst create = () => {\n  offcanvas.value = new Offcanvas(offcanvasRef.value, {\n    backdrop,\n    keyboard,\n    scroll,\n  });\n  offcanvasRef.value.addEventListener(\"hide.bs.offcanvas\", onClose);\n  offcanvasRef.value.addEventListener(\"hidden.bs.offcanvas\", onClosed);\n  offcanvasRef.value.addEventListener(\n    \"hidePrevented.bs.offcanvas\",\n    onPrevented\n  );\n  offcanvasRef.value.addEventListener(\"show.bs.offcanvas\", onOpen);\n  offcanvasRef.value.addEventListener(\"shown.bs.offcanvas\", onOpened);\n};\n\nconst open = () => {\n  offcanvas.value?.show?.();\n};\n\nconst close = () => {\n  closeAnimation.value = true; \n  nextTick(() => {\n    offcanvas.value?.hide?.();\n    setTimeout(() => {\n      closeAnimation.value = false; \n    }, 300); \n  });\n};\n\ndefineExpose({ open, close });\n\nonMounted(() => {\n  create();\n});\n\nonUnmounted(() => {\n  offcanvasRef.value?.removeEventListener?.(\"hide.bs.offcanvas\", onClose);\n  offcanvasRef.value?.removeEventListener?.(\"hidden.bs.offcanvas\", onClosed);\n  offcanvasRef.value?.removeEventListener?.(\n    \"hidePrevented.bs.offcanvas\",\n    onPrevented\n  );\n  offcanvasRef.value?.removeEventListener?.(\"show.bs.offcanvas\", onOpen);\n  offcanvasRef.value?.removeEventListener?.(\"shown.bs.offcanvas\", onOpened);\n});\n</script>\n<template>\n  <component :is=\"component\" to=\"body\">\n    <div ref=\"offcanvasRef\" :class=\"{\n      [`offcanvas${responsive ? '-${responsive}' : ''}`]: true,\n      [`offcanvas-${placement}`]: true,\n      show: true,\n      closing: closeAnimation\n    }\" tabindex=\"-1\" aria-labelledby=\"offcanvasLabel\" v-bind=\"$attrs\">\n      <div v-if=\"!noHeader\" class=\"offcanvas-header\">\n        <div v-if=\"$slots.title || title\" class=\"offcanvas-title\">\n          <slot name=\"title\">\n            <h5>{{ title }}</h5>\n          </slot>\n        </div>\n        <CloseButton @click.prevent.stop=\"close\" class=\"ms-auto\" />\n      </div>\n      <div class=\"offcanvas-body\">\n        <slot></slot>\n      </div>\n    </div>\n  </component>\n</template>\n\n<style>\n.offcanvas {\n  transition: opacity 0.3s ease;\n  opacity: 1;\n}\n\n.offcanvas.closing {\n  animation: slideOutRight 1s ease forwards;\n}\n\n@keyframes slideOutRight {\n  0% {\n    transform: translateX(0);\n    opacity: 1;\n  }\n\n  100% {\n    transform: translateX(100%);\n    opacity: 0;\n  }\n}\n</style>","<script setup lang=\"ts\">\nimport Button from \"@/modules/bootstrap/components/Button.vue\";\nimport { ref, onMounted, nextTick } from \"vue\";\n\ndefineOptions({\n  inheritAttrs: false,\n});\n\ntype Slots = {\n  default: any;\n  content(props: { element: (el: any) => void; closed: () => void }): any;\n};\ndefineSlots<Slots>();\n\ntype Emits = {\n  open: any;\n  close: any;\n};\nconst emit = defineEmits<Emits>();\n\nconst elementRef = ref<any>(null);\nconst opened = ref<boolean>(false);\n\nconst open = () => {\n  opened.value = true;\n  nextTick(() => {\n    elementRef.value?.open?.();\n    nextTick(() => {\n      elementRef.value?.update?.();\n      nextTick(() => {\n        emit(\"open\");\n      });\n    });\n  });\n};\n\nconst elementRefHandler = (el: any) => {\n  elementRef.value = el;\n};\n\nconst closed = () => {\n  opened.value = false;\n  emit(\"close\");\n};\n\ndefineExpose({ open });\n</script>\n<template>\n  <Button @click=\"open\" v-bind=\"$attrs\">\n    <slot></slot>\n  </Button>\n  <template v-if=\"opened\">\n    <slot name=\"content\" :element=\"elementRefHandler\" :closed=\"closed\"></slot>\n  </template>\n</template>\n"],"names":["_useSlots","offcanvasRef","ref","offcanvas","closeAnimation","component","__props","Teleport","onClose","emit","onClosed","onPrevented","onOpen","onOpened","create","Offcanvas","open","_b","_a","close","nextTick","__expose","onMounted","onUnmounted","_d","_c","_f","_e","_h","_g","_j","_i","elementRef","opened","elementRefHandler","el","closed"],"mappings":"w6BAccA,IAuBR,MAAAC,EAAeC,EAAS,IAAI,EAC5BC,EAAYD,EAAS,IAAI,EACzBE,EAAiBF,EAAa,EAAK,EAEnCG,EAAYH,EAASI,SAAS,MAAQC,CAAQ,EAW9CC,EAAW,GAAM,CACrBC,EAAK,QAAS,CAAC,CAAA,EAGXC,EAAY,GAAM,CACtBD,EAAK,SAAU,CAAC,CAAA,EAGZE,EAAe,GAAM,CACzBF,EAAK,YAAa,CAAC,CAAA,EAGfG,EAAU,GAAM,CACpBH,EAAK,OAAQ,CAAC,CAAA,EAGVI,EAAY,GAAM,CACtBJ,EAAK,SAAU,CAAC,CAAA,EAGZK,EAAS,IAAM,CACnBX,EAAU,MAAQ,IAAIY,EAAUd,EAAa,MAAO,CAClD,SAAOK,EAAA,SACP,SAAOA,EAAA,SACP,OAAKA,EAAA,MAAA,CACN,EACYL,EAAA,MAAM,iBAAiB,oBAAqBO,CAAO,EACnDP,EAAA,MAAM,iBAAiB,sBAAuBS,CAAQ,EACnET,EAAa,MAAM,iBACjB,6BACAU,CAAA,EAEWV,EAAA,MAAM,iBAAiB,oBAAqBW,CAAM,EAClDX,EAAA,MAAM,iBAAiB,qBAAsBY,CAAQ,CAAA,EAG9DG,EAAO,IAAM,UACjBC,GAAAC,EAAAf,EAAU,QAAV,YAAAe,EAAiB,OAAjB,MAAAD,EAAA,KAAAC,EAAwB,EAGpBC,EAAQ,IAAM,CAClBf,EAAe,MAAQ,GACvBgB,EAAS,IAAM,UACbH,GAAAC,EAAAf,EAAU,QAAV,YAAAe,EAAiB,OAAjB,MAAAD,EAAA,KAAAC,GACA,WAAW,IAAM,CACfd,EAAe,MAAQ,IACtB,GAAG,CAAA,CACP,CAAA,EAGU,OAAAiB,EAAA,CAAE,KAAAL,EAAM,MAAAG,CAAA,CAAO,EAE5BG,EAAU,IAAM,CACPR,GAAA,CACR,EAEDS,EAAY,IAAM,0BACHN,GAAAC,EAAAjB,EAAA,QAAA,YAAAiB,EAAO,sBAAP,MAAAD,EAAA,KAAAC,EAA6B,oBAAqBV,IAClDgB,GAAAC,EAAAxB,EAAA,QAAA,YAAAwB,EAAO,sBAAP,MAAAD,EAAA,KAAAC,EAA6B,sBAAuBf,IACjEgB,GAAAC,EAAA1B,EAAa,QAAb,YAAA0B,EAAoB,sBAApB,MAAAD,EAAA,KAAAC,EACE,6BACAhB,IAEWiB,GAAAC,EAAA5B,EAAA,QAAA,YAAA4B,EAAO,sBAAP,MAAAD,EAAA,KAAAC,EAA6B,oBAAqBjB,IAClDkB,GAAAC,EAAA9B,EAAA,QAAA,YAAA8B,EAAO,sBAAP,MAAAD,EAAA,KAAAC,EAA6B,qBAAsBlB,EAAQ,CACzE,wqBCjGK,MAAAmB,EAAa9B,EAAS,IAAI,EAC1B+B,EAAS/B,EAAa,EAAK,EAE3Bc,EAAO,IAAM,CACjBiB,EAAO,MAAQ,GACfb,EAAS,IAAM,UACbH,GAAAC,EAAAc,EAAW,QAAX,YAAAd,EAAkB,OAAlB,MAAAD,EAAA,KAAAC,GACAE,EAAS,IAAM,UACbH,GAAAC,EAAAc,EAAW,QAAX,YAAAd,EAAkB,SAAlB,MAAAD,EAAA,KAAAC,GACAE,EAAS,IAAM,CACbX,EAAK,MAAM,CAAA,CACZ,CAAA,CACF,CAAA,CACF,CAAA,EAGGyB,EAAqBC,GAAY,CACrCH,EAAW,MAAQG,CAAA,EAGfC,EAAS,IAAM,CACnBH,EAAO,MAAQ,GACfxB,EAAK,OAAO,CAAA,EAGD,OAAAY,EAAA,CAAE,KAAAL,EAAM"}