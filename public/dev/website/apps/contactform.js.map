{"version":3,"file":"contactform.js","sources":["../../../../resources/js/modules/form/components/TextInput.vue","../../../../resources/js/tiers/website/apps/ContactForm.vue","../../../../resources/js/tiers/website/startup/ContactForm.ts"],"sourcesContent":["<script lang=\"ts\" setup>\nimport { Field } from \"../lib/field\";\nimport FieldWrapper, { GroupSlots } from \"./base/FieldWrapper.vue\";\n\ndefineOptions({\n  inheritAttrs: false,\n});\n\ndefineSlots<GroupSlots>();\n\ntype Props = {\n  field: Field;\n  noLabel?: boolean;\n};\nconst props = defineProps<Props>();\n\nconst { field, noLabel = false } = props;\n\nconst update = (e) => {\n  field.update(e.target.value);\n};\n\nconst touch = (e) => {\n  field.touch(e);\n};\n\nconst blur = (e) => {\n  field.blur(e);\n};\n</script>\n<template>\n  <FieldWrapper :field=\"field\" :no-label=\"noLabel\">\n    <template v-for=\"(_, slot) in $slots\" v-slot:[slot]=\"scope\">\n      <slot :name=\"slot\" v-bind=\"{ ...scope }\" />\n    </template>\n    <template #=\"{ id }\">\n      <textarea\n        :id=\"id\"\n        class=\"form-control\"\n        :class=\"{ 'is-invalid': field.hasErrors }\"\n        v-bind=\"$attrs\"\n        @input=\"update\"\n        @focus=\"touch\"\n        @blur=\"blur\"\n        autocomplete=\"off\"\n        spellcheck=\"false\"\n        style=\"resize: none\"\n        >{{ field.value }}</textarea\n      >\n    </template>\n  </FieldWrapper>\n</template>\n","<script setup lang=\"ts\">\r\nimport Button from \"@/modules/bootstrap/components/Button.vue\";\r\nimport StringInput from \"@/modules/form/components/StringInput.vue\";\r\nimport TextInput from \"@/modules/form/components/TextInput.vue\";\r\nimport { createModel } from \"@/modules/form/hooks/model\";\r\nimport { Field } from \"@/modules/form/lib/field\";\r\nimport { Model } from \"@/modules/form/lib/model\";\r\nimport { RequiredRule } from \"@/modules/form/rules/required\";\r\nimport { StringRule } from \"@/modules/form/rules/string\";\r\nimport { mdiAccount, mdiFormTextboxPassword, mdiSend } from \"@mdi/js\";\r\nimport { onMounted, onUnmounted, ref } from \"vue\";\r\nimport Icon from \"@/components/Icon.vue\";\r\nimport { api } from \"@/lib/api\";\r\nimport { metadata, translate } from \"@/lib/metadata\";\r\nimport { isDark } from \"@/modules/theme\";\r\nimport RecaptchaInput from \"@/modules/form/components/RecaptchaInput.vue\";\r\n\r\nimport App from \"vue\";\r\nimport { successToast } from \"@/modules/bootstrap/lib/toast\";\r\ntype Props = {\r\n    redirectUrl?: string;\r\n};\r\nconst { redirectUrl = \"\" } = defineProps<Props>();\r\n\r\nclass ContactForm extends Model {\r\n    get name(): Field {\r\n        return this.field(\"name\", translate(\"Name*\"), this.initData?.name ?? \"\");\r\n    }\r\n    get email(): Field {\r\n        return this.field(\"email\", translate(\"Email\"), this.initData?.email ?? \"\");\r\n    }\r\n    get subject(): Field {\r\n        return this.field(\"subject\", translate(\"Subject(optional)\"), this.initData?.subject ?? \"\");\r\n    }\r\n    get message(): Field {\r\n        return this.field(\r\n            \"message\",\r\n            translate(\"Message*\"),\r\n            this.initData?.message ?? \"\"\r\n        );\r\n    }\r\n\r\n    get recaptcha(): Field {\r\n        return this.field(\r\n            \"recaptcha\",\r\n            translate(\"ReCaptcha\"),\r\n            this.initData?.recaptcha ?? \"\"\r\n        );\r\n    }\r\n\r\n    get rules(): any[] {\r\n        return [\r\n            [[this.name, this.subject, this.email, this.message], StringRule],\r\n            [[this.name, this.email, this.message], RequiredRule],\r\n        ];\r\n    }\r\n}\r\n// const button = ref<any>(null);\r\n\r\nconst [model, newModel, destroyModel] = createModel(ContactForm);\r\n\r\nconst send = () => {\r\n    model.value?.validate()?.then((valid: boolean) => {\r\n        if (valid) {\r\n            //   button.value?.start?.();\r\n            api()\r\n                .post(\"/test\", model.value?.data ?? {})\r\n                .then(({ data }: any) => {\r\n                    successToast('Form Sent');\r\n                    console.log(model.value?.data);\r\n                })\r\n                .catch((err) => {\r\n                    model.value?.addRemoteErrors?.(err);\r\n                })\r\n                .finally(() => {\r\n                    //   button.value?.stop?.();\r\n                });\r\n        }\r\n    });\r\n};\r\n\r\nonMounted(() => {\r\n    newModel();\r\n});\r\n\r\nonUnmounted(() => {\r\n    destroyModel();\r\n});\r\n</script>\r\n<template>\r\n    <form v-if=\"model\" @submit.prevent=\"send\" class=\"contact-form-vue\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <StringInput :field=\"model.name\" :class=\"'name'\" no-label> </StringInput>\r\n                <StringInput :field=\"model.email\" :class=\"'mail'\" no-label> </StringInput>\r\n                <StringInput :field=\"model.subject\" :class=\"'number'\" no-label> </StringInput>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <TextInput :placeholder=\"'Message*'\" :field=\"model.message\" :class=\"'message'\" no-label\r\n                    aria-placeholder=\"Message*\"></TextInput>\r\n            </div>\r\n        </div>\r\n        <div class=\"submit-captcha pt-4\">\r\n            <div>\r\n                <Button type=\"submit\" color=\"primary\" class=\"submit\" spinner-color=\"light\" ref=\"button\">\r\n                    {{ translate(\"SEND MESSAGE\") }}\r\n                </Button>\r\n            </div>\r\n            <div class=\"recaptcha\">\r\n                <RecaptchaInput :field=\"model.recaptcha\"></RecaptchaInput>\r\n            </div>\r\n        </div>\r\n\r\n    </form>\r\n</template>\r\n<style lang=\"scss\">\r\n.contact-form-vue {\r\n\r\n    .field-wrapper-message,\r\n    .field-wrapper-email,\r\n    .field-wrapper-subject,\r\n    .field-wrapper-name {\r\n        .input-group {\r\n            textarea {\r\n                font-size: 14px;\r\n                border: solid 1px #999A99;\r\n                background: #F6F6F6;\r\n                margin-top: 0;\r\n                border-radius: 0;\r\n            }\r\n\r\n            input {\r\n                font-size: 14px;\r\n                border: solid 1px #999A99;\r\n                background: #F6F6F6;\r\n                margin-top: 0;\r\n                border-radius: 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    .field-wrapper-email,\r\n    .field-wrapper-subject,\r\n    .field-wrapper-name {\r\n        margin-bottom: 2rem;\r\n\r\n        input {\r\n            padding-top: 10px;\r\n            padding-bottom: 10px;\r\n        }\r\n    }\r\n\r\n    .field-wrapper-subject {\r\n        margin-bottom: 0;\r\n    }\r\n\r\n    .field-wrapper-message {\r\n        height: 100%;\r\n        border-radius: 0;\r\n\r\n        .input-group {\r\n            height: 100%;\r\n\r\n            textarea {\r\n                border-radius: 0;\r\n                background: #F6F6F6;\r\n\r\n                &::placeholder {\r\n                    content: 'Message*';\r\n                }\r\n            }\r\n\r\n            @media (max-width: 767px) {\r\n                margin-top: 2rem;\r\n                padding-bottom: 2rem;\r\n            }\r\n        }\r\n    }\r\n\r\n    .submit {\r\n        display: inline-block;\r\n        color: #fff;\r\n        font-size: 15px;\r\n        background: #135897;\r\n        padding: 15px 40px;\r\n        font-weight: 600;\r\n        border: 0;\r\n        border-radius: 0;\r\n        transition: all 1s ease;\r\n\r\n        &:hover {\r\n            background-color: #3e3e3e;\r\n        }\r\n\r\n        @media (max-width: 767px) {\r\n            margin-bottom: 2rem;\r\n            margin-top: 1rem;\r\n            font-size: 12px;\r\n            padding: 10px 20px;\r\n        }\r\n    }\r\n}\r\n\r\n.submit-captcha {\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    @media (max-width:767px) {\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: start;\r\n        flex-flow: column-reverse;\r\n    }\r\n}\r\n</style>","/**\n * ContactForm.vue Startup File\n *\n * @project palacegroup1\n * @company Codendot <https://codendot.com>\n * @author Jawdat Sobh <jawdat@codendot.com>\n * @since Wednesday, September 20, 2023 at 09:40 AM GMT+3\n *\n */\n\nimport { createApp } from \"@/lib/app\"\nimport AppComponent from \"../apps/ContactForm.vue\"\nimport bootstrap from \"../bootstrap/ContactForm\"\n\nconst app = createApp(\"contactform\", AppComponent)\nbootstrap(app)\napp.mount()\n"],"names":["field","noLabel","props","update","touch","blur","ContactForm","Model","translate","_a","StringRule","RequiredRule","model","newModel","destroyModel","createModel","send","_b","valid","api","data","successToast","err","onMounted","onUnmounted","app","createApp","AppComponent"],"mappings":"27BAgBM,CAAE,MAAAA,EAAO,QAAAC,EAAU,EAAA,EAAUC,EAE7BC,EAAU,GAAM,CACdH,EAAA,OAAO,EAAE,OAAO,KAAK,CAAA,EAGvBI,EAAS,GAAM,CACnBJ,EAAM,MAAM,CAAC,CAAA,EAGTK,EAAQ,GAAM,CAClBL,EAAM,KAAK,CAAC,CAAA,wmBCHd,MAAMM,UAAoBC,CAAM,CAC5B,IAAI,MAAc,OACP,OAAA,KAAK,MAAM,OAAQC,EAAU,OAAO,IAAGC,EAAA,KAAK,WAAL,YAAAA,EAAe,OAAQ,EAAE,CAC3E,CACA,IAAI,OAAe,OACR,OAAA,KAAK,MAAM,QAASD,EAAU,OAAO,IAAGC,EAAA,KAAK,WAAL,YAAAA,EAAe,QAAS,EAAE,CAC7E,CACA,IAAI,SAAiB,OACV,OAAA,KAAK,MAAM,UAAWD,EAAU,mBAAmB,IAAGC,EAAA,KAAK,WAAL,YAAAA,EAAe,UAAW,EAAE,CAC7F,CACA,IAAI,SAAiB,OACjB,OAAO,KAAK,MACR,UACAD,EAAU,UAAU,IACpBC,EAAA,KAAK,WAAL,YAAAA,EAAe,UAAW,EAAA,CAElC,CAEA,IAAI,WAAmB,OACnB,OAAO,KAAK,MACR,YACAD,EAAU,WAAW,IACrBC,EAAA,KAAK,WAAL,YAAAA,EAAe,YAAa,EAAA,CAEpC,CAEA,IAAI,OAAe,CACR,MAAA,CACH,CAAC,CAAC,KAAK,KAAM,KAAK,QAAS,KAAK,MAAO,KAAK,OAAO,EAAGC,CAAU,EAChE,CAAC,CAAC,KAAK,KAAM,KAAK,MAAO,KAAK,OAAO,EAAGC,CAAY,CAAA,CAE5D,CACJ,CAGA,KAAM,CAACC,EAAOC,EAAUC,CAAY,EAAIC,EAAYT,CAAW,EAEzDU,EAAO,IAAM,UACfC,GAAAR,EAAAG,EAAM,QAAN,YAAAH,EAAa,aAAb,MAAAQ,EAAyB,KAAMC,GAAmB,OAC1CA,GAEAC,IACK,KAAK,UAASV,EAAAG,EAAM,QAAN,YAAAH,EAAa,OAAQ,CAAA,CAAE,EACrC,KAAK,CAAC,CAAE,KAAAW,KAAgB,OACrBC,EAAa,WAAW,EAChB,QAAA,KAAIZ,EAAAG,EAAM,QAAN,YAAAH,EAAa,IAAI,CAAA,CAChC,EACA,MAAOa,GAAQ,UACNL,GAAAR,EAAAG,EAAA,QAAA,YAAAH,EAAO,kBAAP,MAAAQ,EAAA,KAAAR,EAAyBa,EAAG,CACrC,EACA,QAAQ,IAAM,CAAA,CAEd,CACT,EACH,EAGL,OAAAC,EAAU,IAAM,CACHV,GAAA,CACZ,EAEDW,EAAY,IAAM,CACDV,GAAA,CAChB,owBCzEKW,GAAMC,EAAU,cAAeC,EAAY,EAEjDF,GAAI,MAAM"}